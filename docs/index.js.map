{"version":3,"file":"index.js","sources":["../dist/game/tiles.data.js","../dist/game/sprites.data.js","../dist/game/scene.data.js","../dist/engine/utils/frame-rate-iterator.js","../dist/engine/engine-game.js","../dist/engine/geom/intersections.js","../dist/engine/geom/geom-rect.js","../dist/engine/tile.js","../dist/engine/tile-manager.js","../dist/engine/scene/scene-collider.js","../dist/engine/scene/scene.js","../dist/engine/geom/geom-point.js","../dist/engine/geom/geom-vector.js","../dist/engine/sprite-state.js","../dist/engine/sprite.js","../dist/engine/sprite-manager.js","../dist/engine/engine-app.js","../dist/engine/scene/generic.item.js","../dist/engine/utils/random-id.js","../dist/game/chest.item.js","../dist/game/hero.item.js","../dist/index.js","../dist/canvas-draw-context.js","../dist/game/app.js","../dist/ui.js"],"sourcesContent":["export var TileId;\n(function (TileId) {\n    TileId[TileId[\"Debug01\"] = 0] = \"Debug01\";\n    TileId[TileId[\"Grass0\"] = 1] = \"Grass0\";\n    TileId[TileId[\"Grass1\"] = 2] = \"Grass1\";\n    TileId[TileId[\"Plant\"] = 3] = \"Plant\";\n    TileId[TileId[\"Bush\"] = 4] = \"Bush\";\n    TileId[TileId[\"Chest\"] = 5] = \"Chest\";\n    TileId[TileId[\"Book\"] = 6] = \"Book\";\n    TileId[TileId[\"Hero\"] = 7] = \"Hero\";\n})(TileId || (TileId = {}));\nconst assetsDir = 'assets';\nexport const tilesData = [\n    { id: TileId.Debug01, url: `${assetsDir}/debug01.png` },\n    { id: TileId.Grass0, url: `${assetsDir}/grass-empty.png` },\n    { id: TileId.Grass1, url: `${assetsDir}/grass.png` },\n    { id: TileId.Plant, url: `${assetsDir}/plant.png` },\n    { id: TileId.Bush, url: `${assetsDir}/bush.png` },\n    { id: TileId.Chest, url: `${assetsDir}/chest.png` },\n    { id: TileId.Book, url: `${assetsDir}/book.png` },\n    { id: TileId.Hero, url: `${assetsDir}/hero.png` },\n];\n//# sourceMappingURL=tiles.data.js.map","import { TileId } from './tiles.data.js';\nexport var SpriteId;\n(function (SpriteId) {\n    SpriteId[\"Debug01\"] = \"debug01\";\n    SpriteId[\"Grass0\"] = \"grass0\";\n    SpriteId[\"Grass1\"] = \"grass1\";\n    SpriteId[\"Bush\"] = \"bush\";\n    SpriteId[\"Chest\"] = \"chest\";\n    SpriteId[\"Book\"] = \"book\";\n    SpriteId[\"Plant\"] = \"plant\";\n    SpriteId[\"PlantOverlay\"] = \"plant-overlay\";\n    SpriteId[\"Hero\"] = \"hero\";\n})(SpriteId || (SpriteId = {}));\nexport var SpriteChestState;\n(function (SpriteChestState) {\n    SpriteChestState[\"Closed\"] = \"closed\";\n    SpriteChestState[\"Opening\"] = \"opening\";\n    SpriteChestState[\"Open\"] = \"open\";\n})(SpriteChestState || (SpriteChestState = {}));\nexport var SpriteHeroState;\n(function (SpriteHeroState) {\n    SpriteHeroState[\"StillUp\"] = \"still-up\";\n    SpriteHeroState[\"StillDown\"] = \"still-down\";\n    SpriteHeroState[\"StillLeft\"] = \"still-left\";\n    SpriteHeroState[\"StillRight\"] = \"still-right\";\n    SpriteHeroState[\"WalkingUp\"] = \"walking-up\";\n    SpriteHeroState[\"WalkingDown\"] = \"walking-down\";\n    SpriteHeroState[\"WalkingLeft\"] = \"walking-left\";\n    SpriteHeroState[\"WalkingRight\"] = \"walking-right\";\n})(SpriteHeroState || (SpriteHeroState = {}));\nexport const spritesData = [\n    {\n        id: SpriteId.Debug01,\n        states: [{ tileId: TileId.Debug01, bbox: [100, 100, 250, 250], anchor: [0, -50] }],\n        hitBox: [50, 50, 100, 100],\n    },\n    { id: SpriteId.Grass0, states: [{ tileId: TileId.Grass0 }] },\n    { id: SpriteId.Grass1, states: [{ tileId: TileId.Grass1 }] },\n    { id: SpriteId.Bush, states: [{ tileId: TileId.Bush }], hitBox: [3, 3, 35, 35] },\n    {\n        id: SpriteId.Chest,\n        states: [\n            { label: SpriteChestState.Closed, tileId: TileId.Chest, bbox: [0, 0, 65, 53] },\n            { label: SpriteChestState.Opening, tileId: TileId.Chest, bbox: [0, 0, 65, 53], frames: 3, delay: 200 },\n            { label: SpriteChestState.Open, tileId: TileId.Chest, bbox: [132, 0, 197, 53] },\n        ],\n        hitBox: [0, 7, 59, 48],\n    },\n    { id: SpriteId.Book, states: [{ tileId: TileId.Book }], hitBox: 'bbox' },\n    {\n        id: SpriteId.Plant,\n        states: [{ tileId: TileId.Plant, bbox: [0, 51, 44, 86], anchor: [0, -51] }],\n        hitBox: 'bbox',\n        hitBoxAnchor: [0, -51],\n    },\n    { id: SpriteId.PlantOverlay, states: [{ tileId: TileId.Plant, bbox: [0, 0, 44, 50] }] },\n    {\n        id: SpriteId.Hero,\n        states: [\n            { label: SpriteHeroState.StillUp, tileId: TileId.Hero, bbox: [0, 66, 44, 134] },\n            { label: SpriteHeroState.StillDown, tileId: TileId.Hero, bbox: [0, 0, 45, 66] },\n            { label: SpriteHeroState.StillLeft, tileId: TileId.Hero, bbox: [3, 135, 41, 200] },\n            { label: SpriteHeroState.StillRight, tileId: TileId.Hero, bbox: [3, 201, 41, 266] },\n            { label: SpriteHeroState.WalkingUp, tileId: TileId.Hero, bbox: [0, 66, 44, 134], frames: 4 },\n            { label: SpriteHeroState.WalkingDown, tileId: TileId.Hero, bbox: [0, 0, 44, 65], frames: 4 },\n            { label: SpriteHeroState.WalkingLeft, tileId: TileId.Hero, bbox: [3, 135, 41, 200], frames: 4 },\n            { label: SpriteHeroState.WalkingRight, tileId: TileId.Hero, bbox: [3, 201, 41, 266], frames: 4 },\n        ],\n        hitBox: [5, 30, 35, 65],\n    },\n];\n//# sourceMappingURL=sprites.data.js.map","import { SpriteId } from './sprites.data.js';\nexport var SceneDataItemType;\n(function (SceneDataItemType) {\n    SceneDataItemType[SceneDataItemType[\"Chest\"] = 0] = \"Chest\";\n    SceneDataItemType[SceneDataItemType[\"Hero\"] = 1] = \"Hero\";\n})(SceneDataItemType || (SceneDataItemType = {}));\nexport const sceneData = {\n    layer0: [\n        { spriteId: SpriteId.Grass0, x: 150, y: 250 },\n        { spriteId: SpriteId.Grass1, x: 189, y: 250 },\n    ],\n    layer1: [\n        { spriteId: SpriteId.Plant, x: 150, y: 100 },\n        { spriteId: SpriteId.Plant, x: 205, y: 100 },\n        { spriteId: SpriteId.Bush, x: 300, y: 210 },\n        { spriteId: SpriteId.Bush, x: 300, y: 255 },\n        { spriteId: SpriteId.Bush, x: 300, y: 300 },\n        { spriteId: SpriteId.Chest, type: SceneDataItemType.Chest, x: 100, y: 300 },\n        { spriteId: SpriteId.Book, x: 300, y: 100 },\n    ],\n    layer2: [{ spriteId: SpriteId.Hero, type: SceneDataItemType.Hero, x: 50, y: 100 }],\n    layer3: [\n        { spriteId: SpriteId.PlantOverlay, x: 150, y: 100 },\n        { spriteId: SpriteId.PlantOverlay, x: 205, y: 100 },\n    ],\n};\n//# sourceMappingURL=scene.data.js.map","export class FrameRateIterator {\n    targetFps;\n    timer = 0;\n    frameCountInOneSecond = 0;\n    fps = 0;\n    constructor(params) {\n        this.targetFps = params.targetFps;\n    }\n    shouldRender(dt) {\n        this.timer += dt;\n        if (this.timer > 1000) {\n            this.fps = this.frameCountInOneSecond;\n            this.frameCountInOneSecond = 0;\n            this.timer = 0;\n        }\n        this.frameCountInOneSecond++;\n        return Promise.resolve(true);\n    }\n}\n//# sourceMappingURL=frame-rate-iterator.js.map","import { FrameRateIterator } from './utils/frame-rate-iterator.js';\nconst TARGET_FPS = 60;\nexport class EngineGame {\n    scene;\n    controlState;\n    frameRateIterator;\n    constructor(scene) {\n        this.scene = scene;\n        this.controlState = {\n            up: false,\n            down: false,\n            left: false,\n            right: false,\n            control: false,\n            action: false,\n        };\n        this.frameRateIterator = new FrameRateIterator({ targetFps: TARGET_FPS });\n    }\n    nextFrame(drawContext, dt) {\n        this.scene.processInputs(dt, this.controlState);\n        this.scene.update(dt);\n        this.frameRateIterator.shouldRender(dt).then(shouldRender => {\n            if (shouldRender) {\n                this.render(drawContext);\n            }\n        });\n    }\n    updateControlState(state) {\n        this.controlState.up = state.up ?? this.controlState.up;\n        this.controlState.down = state.down ?? this.controlState.down;\n        this.controlState.left = state.left ?? this.controlState.left;\n        this.controlState.right = state.right ?? this.controlState.right;\n        this.controlState.control = state.control ?? this.controlState.control;\n        this.controlState.action = state.action ?? this.controlState.action;\n    }\n    render(drawContext) {\n        try {\n            this.scene.render(drawContext);\n            const fpsString = `FPS: ${this.frameRateIterator.fps}`;\n            drawContext.writeText(fpsString, 5, 5, { horizontalAlign: 'left', verticalAlign: 'top' });\n        }\n        catch (error) {\n            console.error(error);\n        }\n    }\n}\n//# sourceMappingURL=engine-game.js.map","export var Intersections;\n(function (Intersections) {\n    function rectIntersectsWithRect(r1, r2) {\n        if (r1.x > r2.x + r2.w) {\n            return false;\n        }\n        if (r1.x + r1.w < r2.x) {\n            return false;\n        }\n        if (r1.y > r2.y + r2.h) {\n            return false;\n        }\n        if (r1.y + r1.h < r2.y) {\n            return false;\n        }\n        return true;\n    }\n    Intersections.rectIntersectsWithRect = rectIntersectsWithRect;\n    function rectIntersectsWithCircle(rect, circle) {\n        return false;\n    }\n    Intersections.rectIntersectsWithCircle = rectIntersectsWithCircle;\n    function circleIntersectsWithCircle(c1, c2) {\n        const diffX = c2.x - c1.x;\n        const diffY = c2.y - c1.y;\n        return Math.sqrt(diffX * diffX + diffY * diffY) < c1.r + c2.r;\n    }\n    Intersections.circleIntersectsWithCircle = circleIntersectsWithCircle;\n    function circleIntersectsWithRect(circle, rect) {\n        return rectIntersectsWithCircle(rect, circle);\n    }\n    Intersections.circleIntersectsWithRect = circleIntersectsWithRect;\n})(Intersections || (Intersections = {}));\n//# sourceMappingURL=intersections.js.map","import { Intersections } from './intersections.js';\nexport class GeomRect {\n    x;\n    y;\n    w;\n    h;\n    constructor(x, y, w, h) {\n        this.x = x;\n        this.y = y;\n        this.w = w;\n        this.h = h;\n    }\n    equals(other) {\n        return this.x === other.x && this.y === other.y && this.w === other.w && this.h === other.h;\n    }\n    moveByVector(vector) {\n        return new GeomRect(this.x + vector.x, this.y + vector.y, this.w, this.h);\n    }\n    intersectsWithRect(rect) {\n        return Intersections.rectIntersectsWithRect(this, rect);\n    }\n    intersectsWithCircle(circle) {\n        return Intersections.rectIntersectsWithCircle(this, circle);\n    }\n}\n//# sourceMappingURL=geom-rect.js.map","import { GeomRect } from './geom/geom-rect.js';\nexport class Tile {\n    id;\n    image;\n    imageBBox;\n    constructor(id, image) {\n        this.id = id;\n        this.image = image;\n        this.imageBBox = new GeomRect(0, 0, image.width, image.height);\n    }\n    getCroppedImage(bbox) {\n        const canvas = document.createElement('canvas');\n        canvas.width = bbox.w;\n        canvas.height = bbox.h;\n        const context = canvas.getContext('2d');\n        context.drawImage(this.image, -bbox.x, -bbox.y);\n        const croppedImage = document.createElement('img');\n        croppedImage.src = canvas.toDataURL();\n        return croppedImage;\n    }\n    render(drawContext, bbox, position) {\n        if (bbox.equals(this.imageBBox)) {\n            drawContext.drawImage(this.image, position.x, position.y, this.image.width, this.image.height);\n        }\n        else {\n            drawContext.drawImageCropped(this.image, bbox.x, bbox.y, bbox.w, bbox.h, position.x, position.y, bbox.w, bbox.h);\n        }\n    }\n}\n//# sourceMappingURL=tile.js.map","import { Tile } from './tile.js';\nexport class TileManager {\n    tiles = new Map();\n    async loadTiles(dataTiles) {\n        for (const dataTile of dataTiles) {\n            const tile = await new Promise((resolve, reject) => {\n                const image = new Image();\n                image.onload = () => {\n                    resolve(new Tile(dataTile.id, image));\n                };\n                image.onerror = () => {\n                    reject();\n                };\n                image.src = dataTile.url;\n            });\n            this.tiles.set(dataTile.id, tile);\n        }\n    }\n    getTile(id) {\n        const tile = this.tiles.get(id);\n        if (tile === undefined) {\n            throw new Error(`No tile for id '${id}'`);\n        }\n        return tile;\n    }\n    scaleSprite(img, scale) {\n        if (!Number.isInteger(scale)) {\n            console.error(`Invalid scale ${scale}`);\n            throw Error();\n        }\n        if (scale === 1) {\n            return img;\n        }\n        const originalCanvas = document.createElement('canvas');\n        const originalContext = originalCanvas.getContext('2d');\n        if (originalContext === null) {\n            console.error('Error creating memory canvas');\n            throw Error();\n        }\n        const originalWidth = img.width;\n        const originalHeight = img.height;\n        const targetWidth = originalWidth * scale;\n        const targetHeight = originalHeight * scale;\n        originalContext.drawImage(img, 0, 0, originalWidth, originalHeight);\n        const originalData = originalContext.getImageData(0, 0, originalWidth, originalHeight);\n        const targetCanvas = document.createElement('canvas');\n        targetCanvas.width = targetWidth;\n        targetCanvas.height = targetHeight;\n        const targetContext = targetCanvas.getContext('2d');\n        if (targetContext === null) {\n            console.error('Error creating memory canvas');\n            throw Error();\n        }\n        const targetData = targetContext.createImageData(targetWidth, targetHeight);\n        let targetDataIndex = 0;\n        for (let y = 0; y < originalHeight; y++) {\n            const lineStartIndex = y * originalWidth * 4;\n            const lineEndIndex = lineStartIndex + originalWidth * 4;\n            const linePixelsRGBA = originalData.data.slice(lineStartIndex, lineEndIndex);\n            for (let s = 0; s < scale; s++) {\n                for (let x = 0; x < linePixelsRGBA.length; x += 4) {\n                    for (let s = 0; s < scale; s++) {\n                        targetData.data[targetDataIndex++] = linePixelsRGBA[x];\n                        targetData.data[targetDataIndex++] = linePixelsRGBA[x + 1];\n                        targetData.data[targetDataIndex++] = linePixelsRGBA[x + 2];\n                        targetData.data[targetDataIndex++] = linePixelsRGBA[x + 3];\n                    }\n                }\n            }\n        }\n        targetContext.putImageData(targetData, 0, 0);\n        const targetImg = document.createElement('img');\n        targetImg.src = targetCanvas.toDataURL();\n        return targetImg;\n    }\n}\n//# sourceMappingURL=tile-manager.js.map","import { GeomRect } from '../geom/geom-rect.js';\nexport class SceneCollider {\n    items;\n    constructor(items) {\n        this.items = items;\n    }\n    anyItemCollidesWith(checkedItem, position, options) {\n        for (const sceneItem of this.items) {\n            if (!sceneItem.canCollide() || sceneItem.uniqueId === checkedItem.uniqueId) {\n                continue;\n            }\n            if (this.checkCollision(checkedItem.sprite, position, sceneItem.sprite, sceneItem.position, options?.tolerance ?? 0)) {\n                return sceneItem;\n            }\n        }\n        return undefined;\n    }\n    checkCollision(sprite1, position1, sprite2, position2, tolerance) {\n        if (sprite1.hitBox instanceof GeomRect) {\n            const hitBox1 = new GeomRect(position1.x - (sprite1.hitBoxAnchor?.x ?? 0) + sprite1.hitBox.x - tolerance, position1.y - (sprite1.hitBoxAnchor?.y ?? 0) + sprite1.hitBox.y - tolerance, sprite1.hitBox.w + tolerance, sprite1.hitBox.h + tolerance);\n            if (sprite2.hitBox instanceof GeomRect) {\n                const hitBox2 = new GeomRect(position2.x - (sprite2.hitBoxAnchor?.x ?? 0) + sprite2.hitBox.x - tolerance, position2.y - (sprite2.hitBoxAnchor?.y ?? 0) + sprite2.hitBox.y - tolerance, sprite2.hitBox.w + tolerance, sprite2.hitBox.h + tolerance);\n                return hitBox1.intersectsWithRect(hitBox2);\n            }\n        }\n        return false;\n    }\n}\n//# sourceMappingURL=scene-collider.js.map","import { SceneCollider } from './scene-collider.js';\nexport class Scene {\n    layer0;\n    layer1;\n    layer2;\n    layer3;\n    collider;\n    constructor(layer0, layer1, layer2, layer3) {\n        this.layer0 = layer0;\n        this.layer1 = layer1;\n        this.layer2 = layer2;\n        this.layer3 = layer3;\n        this.collider = new SceneCollider([...this.layer1, ...this.layer2]);\n    }\n    processInputs(dt, controlState) {\n        this.layer2.forEach(item => item.processInputs(controlState, this.collider));\n    }\n    update(dt) {\n        this.layer1.forEach(item => item.update(dt, this.collider));\n        this.layer2.forEach(item => item.update(dt, this.collider));\n    }\n    render(drawContext) {\n        this.layer0.forEach(item => item.render(drawContext));\n        const layers12Items = [...this.layer1, ...this.layer2].sort((a, b) => a.position.y + (a.hitBox?.h ?? 0) - (b.position.y + (b.hitBox?.h ?? 0)));\n        layers12Items.forEach(item => item.render(drawContext));\n        this.layer3.sort((a, b) => a.position.y - b.position.y);\n        this.layer3.forEach(item => item.render(drawContext));\n    }\n}\n//# sourceMappingURL=scene.js.map","export class GeomPoint {\n    x;\n    y;\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    moveByVector(vector) {\n        return new GeomPoint(this.x + vector.x, this.y + vector.y);\n    }\n}\n//# sourceMappingURL=geom-point.js.map","export class GeomVector {\n    x;\n    y;\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    normalize() {\n        const magnitude = Math.sqrt(this.x * this.x + this.y * this.y);\n        if (magnitude <= 0) {\n            console.error(`Vector has an invalid magnitude (${this.x}, ${this.y})`);\n            throw new Error(`Vector has an invalid magnitude (${this.x}, ${this.y})`);\n        }\n        return new GeomVector((this.x /= magnitude), (this.y /= magnitude));\n    }\n    scale(factor) {\n        return new GeomVector(this.x * factor, this.y * factor);\n    }\n}\n//# sourceMappingURL=geom-vector.js.map","import { GeomVector } from './geom/geom-vector.js';\nexport class SpriteState {\n    label;\n    tile;\n    _bbox;\n    anchor;\n    frames;\n    delay;\n    firstFrameBBoxX;\n    currentFrame;\n    millisecBeforeNextFrame;\n    reverse = false;\n    constructor(label, tile, _bbox, anchor, frames, delay) {\n        this.label = label;\n        this.tile = tile;\n        this._bbox = _bbox;\n        this.anchor = anchor;\n        this.frames = frames;\n        this.delay = delay;\n        this.firstFrameBBoxX = this._bbox.x;\n        this.currentFrame = 0;\n        this.millisecBeforeNextFrame = this.delay;\n    }\n    get bbox() {\n        return this._bbox;\n    }\n    get isReversed() {\n        return this.reverse;\n    }\n    init(reverse) {\n        this.currentFrame = reverse ? this.frames - 1 : 0;\n        this.reverse = reverse;\n        this._bbox.x = this.firstFrameBBoxX + this.currentFrame * this._bbox.w;\n    }\n    update(dt) {\n        const out = {\n            loopedAnimation: false,\n        };\n        if (this.frames > 1) {\n            this.millisecBeforeNextFrame -= dt;\n            if (this.millisecBeforeNextFrame < 0) {\n                this.millisecBeforeNextFrame = this.delay;\n                if (this.reverse) {\n                    this.currentFrame--;\n                    if (this.currentFrame < 0) {\n                        this.currentFrame = this.frames - 1;\n                        out.loopedAnimation = true;\n                    }\n                }\n                else {\n                    this.currentFrame++;\n                    if (this.currentFrame >= this.frames) {\n                        this.currentFrame = 0;\n                        out.loopedAnimation = true;\n                    }\n                }\n                this._bbox.x = this.firstFrameBBoxX + this.currentFrame * this._bbox.w;\n            }\n        }\n        return out;\n    }\n    render(drawContext, position) {\n        this.tile.render(drawContext, this._bbox, position.moveByVector(new GeomVector(-this.anchor.x, -this.anchor.y)));\n    }\n}\n//# sourceMappingURL=sprite-state.js.map","export class Sprite {\n    states;\n    _hitBox;\n    _hitBoxAnchor;\n    currentState;\n    constructor(states, _hitBox, _hitBoxAnchor) {\n        this.states = states;\n        this._hitBox = _hitBox;\n        this._hitBoxAnchor = _hitBoxAnchor;\n        if (states.length < 1) {\n            console.error('Sprite states must have at least 1 state');\n            throw new Error('');\n        }\n        this.currentState = this.states[0];\n    }\n    get bbox() {\n        return this.currentState.bbox;\n    }\n    get hitBox() {\n        return this._hitBox;\n    }\n    get hitBoxAnchor() {\n        return this._hitBoxAnchor;\n    }\n    hasHitBox() {\n        return this._hitBox !== undefined;\n    }\n    selectState(label, reverse) {\n        if (label === this.currentState.label) {\n            const reversed = reverse ?? false;\n            if (this.currentState.isReversed === reversed) {\n                return;\n            }\n        }\n        this.currentState = this.states[0];\n        const state = this.states.find(s => s.label === label);\n        if (state !== undefined) {\n            this.currentState = state;\n        }\n        this.currentState.init(reverse ?? false);\n    }\n    update(dt) {\n        return this.currentState.update(dt);\n    }\n    render(drawContext, position) {\n        this.currentState.render(drawContext, position);\n    }\n}\n//# sourceMappingURL=sprite.js.map","import { GeomPoint } from './geom/geom-point.js';\nimport { GeomRect } from './geom/geom-rect.js';\nimport { SpriteState } from './sprite-state.js';\nimport { Sprite } from './sprite.js';\nexport class SpriteManager {\n    spritesData;\n    tileManager;\n    sprites = new Map();\n    constructor(spritesData, tileManager) {\n        this.spritesData = spritesData;\n        this.tileManager = tileManager;\n    }\n    getSprite(id) {\n        const spriteData = this.spritesData.find(s => s.id === id);\n        if (spriteData === undefined) {\n            console.error(`No sprite data for id '${id}'`);\n            throw new Error();\n        }\n        let sprite = this.sprites.get(id);\n        if (sprite === undefined) {\n            sprite = this.createSprite(spriteData);\n        }\n        return sprite;\n    }\n    createSprite(spriteData) {\n        const states = [];\n        for (const state of spriteData.states) {\n            const tile = this.tileManager.getTile(state.tileId);\n            let bbox;\n            if (state.bbox !== undefined) {\n                bbox = new GeomRect(state.bbox[0], state.bbox[1], state.bbox[2] - state.bbox[0] + 1, state.bbox[3] - state.bbox[1] + 1);\n            }\n            else {\n                bbox = tile.imageBBox;\n            }\n            let anchor;\n            if (state.anchor !== undefined) {\n                anchor = new GeomPoint(state.anchor[0], state.anchor[1]);\n            }\n            else {\n                anchor = new GeomPoint(0, 0);\n            }\n            states.push(new SpriteState(state.label, tile, bbox, anchor, state.frames ?? 1, state.delay ?? 100));\n        }\n        let hitBox;\n        if (spriteData.hitBox !== undefined) {\n            if (spriteData.hitBox === 'bbox') {\n                const bbox = states[0].bbox;\n                hitBox = new GeomRect(0, 0, bbox.w, bbox.h);\n            }\n            else {\n                hitBox = new GeomRect(spriteData.hitBox[0], spriteData.hitBox[1], spriteData.hitBox[2] - spriteData.hitBox[0] + 1, spriteData.hitBox[3] - spriteData.hitBox[1] + 1);\n            }\n        }\n        let hitBoxAnchor;\n        if (spriteData.hitBoxAnchor !== undefined) {\n            hitBoxAnchor = new GeomPoint(spriteData.hitBoxAnchor[0], spriteData.hitBoxAnchor[1]);\n        }\n        return new Sprite(states, hitBox, hitBoxAnchor);\n    }\n}\n//# sourceMappingURL=sprite-manager.js.map","import { tilesData } from '../game/tiles.data.js';\nimport { sceneData } from '../game/scene.data.js';\nimport { EngineGame } from './engine-game.js';\nimport { TileManager } from './tile-manager.js';\nimport { Scene } from './scene/scene.js';\nimport { SpriteManager } from './sprite-manager.js';\nimport { spritesData } from '../game/sprites.data.js';\nconst SCREEN_WIDTH = 500;\nconst SCREEN_HEIGHT = 500;\nexport class EngineApp {\n    canvas;\n    drawContext;\n    lastTimestamp;\n    _game;\n    animationRunning = true;\n    constructor(canvas, drawContext) {\n        this.canvas = canvas;\n        this.drawContext = drawContext;\n    }\n    get game() {\n        return this._game;\n    }\n    get isAnimationRunning() {\n        return this.animationRunning;\n    }\n    async start() {\n        this.canvas.width = SCREEN_WIDTH;\n        this.canvas.height = SCREEN_HEIGHT;\n        const tileManager = new TileManager();\n        await tileManager.loadTiles(tilesData);\n        const spriteManager = new SpriteManager(spritesData, tileManager);\n        const scene = new Scene(sceneData.layer0.map(item => this.createSceneItem(spriteManager, item)), sceneData.layer1.map(item => this.createSceneItem(spriteManager, item)), sceneData.layer2.map(item => this.createSceneItem(spriteManager, item)), sceneData.layer3.map(item => this.createSceneItem(spriteManager, item)));\n        this._game = new EngineGame(scene);\n        this.setupControls();\n        window.requestAnimationFrame(this.gameLoop.bind(this));\n    }\n    enableAnimation(enabled) {\n        this.animationRunning = enabled;\n        if (this.animationRunning) {\n            window.requestAnimationFrame(this.gameLoop.bind(this));\n        }\n    }\n    goToNextFrame(dt) {\n        this.drawBackground();\n        this._game.nextFrame(this.drawContext, dt);\n        this._game.updateControlState({ action: false });\n    }\n    gameLoop(timestamp) {\n        this.lastTimestamp = this.lastTimestamp ?? timestamp;\n        const dt = timestamp - this.lastTimestamp;\n        this.lastTimestamp = timestamp;\n        this.goToNextFrame(dt);\n        if (this.animationRunning) {\n            window.requestAnimationFrame(this.gameLoop.bind(this));\n        }\n    }\n    drawBackground() {\n        this.drawContext.fillRect(0, 0, SCREEN_WIDTH, SCREEN_HEIGHT, { color: '#999' });\n        for (let i = 50; i < SCREEN_WIDTH; i += 50) {\n            this.drawContext.strokeRect(i, 0, 50, SCREEN_WIDTH, { color: 'black' });\n        }\n        for (let i = 25; i < SCREEN_WIDTH; i += 25) {\n            this.drawContext.strokeRect(i, 0, 25, SCREEN_WIDTH, { color: '#888' });\n        }\n        for (let j = 50; j < SCREEN_HEIGHT; j += 50) {\n            this.drawContext.strokeRect(0, j, SCREEN_HEIGHT, 50, { color: 'black' });\n        }\n        for (let j = 25; j < SCREEN_HEIGHT; j += 25) {\n            this.drawContext.strokeRect(0, j, SCREEN_HEIGHT, 25, { color: '#888' });\n        }\n    }\n    setupControls() {\n        window.addEventListener('keydown', (event) => {\n            switch (event.code.toLowerCase()) {\n                case 'arrowup':\n                    this.game.updateControlState({ up: true });\n                    event.preventDefault();\n                    break;\n                case 'arrowdown':\n                    this.game.updateControlState({ down: true });\n                    event.preventDefault();\n                    break;\n                case 'arrowleft':\n                    this.game.updateControlState({ left: true });\n                    event.preventDefault();\n                    break;\n                case 'arrowright':\n                    this.game.updateControlState({ right: true });\n                    event.preventDefault();\n                    break;\n                case 'keyz':\n                    this.game.updateControlState({ control: true });\n                    event.preventDefault();\n                    break;\n            }\n        });\n        window.addEventListener('keyup', (event) => {\n            switch (event.code.toLowerCase()) {\n                case 'arrowup':\n                    this.game.updateControlState({ up: false });\n                    event.preventDefault();\n                    break;\n                case 'arrowdown':\n                    this.game.updateControlState({ down: false });\n                    event.preventDefault();\n                    break;\n                case 'arrowleft':\n                    this.game.updateControlState({ left: false });\n                    event.preventDefault();\n                    break;\n                case 'arrowright':\n                    this.game.updateControlState({ right: false });\n                    event.preventDefault();\n                    break;\n                case 'keyz':\n                    this.game.updateControlState({ control: false });\n                    event.preventDefault();\n                    break;\n                case 'keyx':\n                    this.game.updateControlState({ action: true });\n                    event.preventDefault();\n                    break;\n            }\n        });\n    }\n}\n//# sourceMappingURL=engine-app.js.map","import { GeomPoint } from '../geom/geom-point.js';\nimport { getRandomId } from '../utils/random-id.js';\nexport class GenericItem {\n    _uniqueId;\n    _sprite;\n    _position;\n    _lastSpriteUpdateOut;\n    constructor(params) {\n        this._uniqueId = getRandomId();\n        this._sprite = params.sprite;\n        this._position = new GeomPoint(params.x, params.y);\n    }\n    canCollide() {\n        return this._sprite.hasHitBox();\n    }\n    get uniqueId() {\n        return this._uniqueId;\n    }\n    get sprite() {\n        return this._sprite;\n    }\n    get position() {\n        return this._position;\n    }\n    get bbox() {\n        return this._sprite.bbox;\n    }\n    get hitBox() {\n        return this._sprite.hitBox;\n    }\n    processInputs(controlState, collider) { }\n    update(dt, collider) {\n        this._lastSpriteUpdateOut = this._sprite.update(dt);\n    }\n    render(drawContext) {\n        this._sprite.render(drawContext, this._position);\n    }\n}\n//# sourceMappingURL=generic.item.js.map","export function getRandomId() {\n    return btoa(`${Math.random() * 99999}`);\n}\n//# sourceMappingURL=random-id.js.map","import { SpriteChestState } from './sprites.data.js';\nimport { GenericItem } from '../engine/scene/generic.item.js';\nexport class ChestItem extends GenericItem {\n    isOpen = false;\n    constructor(params) {\n        super(params);\n        this._sprite.selectState(SpriteChestState.Closed);\n    }\n    open() {\n        if (this.isOpen) {\n            this._sprite.selectState(SpriteChestState.Opening, true);\n            this.isOpen = false;\n        }\n        else {\n            this._sprite.selectState(SpriteChestState.Opening);\n            this.isOpen = true;\n        }\n    }\n    update(dt, collider) {\n        super.update(dt, collider);\n        if (this._lastSpriteUpdateOut.loopedAnimation) {\n            this._sprite.selectState(this.isOpen ? SpriteChestState.Open : SpriteChestState.Closed);\n        }\n    }\n}\n//# sourceMappingURL=chest.item.js.map","import { GeomVector } from '../engine/geom/geom-vector.js';\nimport { GenericItem } from '../engine/scene/generic.item.js';\nimport { SpriteHeroState } from './sprites.data.js';\nimport { ChestItem } from './chest.item.js';\nconst SPEED_WALKING = 0.1;\nconst SPEED_RUNNING = 0.2;\nexport class HeroItem extends GenericItem {\n    movingDirectionX;\n    movingDirectionY;\n    state;\n    speed = SPEED_WALKING;\n    constructor(params) {\n        super(params);\n        this.state = SpriteHeroState.StillDown;\n        this.movingDirectionX = 0;\n        this.movingDirectionY = 0;\n    }\n    processInputs(controlState, collider) {\n        super.processInputs(controlState, collider);\n        this.state = SpriteHeroState.StillDown;\n        this.movingDirectionX = 0;\n        if (controlState.left) {\n            this.movingDirectionX = -1;\n            this.state = SpriteHeroState.WalkingLeft;\n        }\n        else if (controlState.right) {\n            this.movingDirectionX = 1;\n            this.state = SpriteHeroState.WalkingRight;\n        }\n        this.movingDirectionY = 0;\n        if (controlState.up) {\n            this.movingDirectionY = -1;\n            this.state = SpriteHeroState.WalkingUp;\n        }\n        else if (controlState.down) {\n            this.movingDirectionY = 1;\n            this.state = SpriteHeroState.WalkingDown;\n        }\n        this._sprite.selectState(this.state);\n        this.speed = controlState.control ? SPEED_RUNNING : SPEED_WALKING;\n        if (controlState.action) {\n            const collideItem = collider.anyItemCollidesWith(this, this._position, { tolerance: 5 });\n            if (collideItem !== undefined && collideItem instanceof ChestItem) {\n                const chest = collideItem;\n                chest.open();\n            }\n        }\n    }\n    update(dt, collider) {\n        super.update(dt, collider);\n        switch (this.state) {\n            case SpriteHeroState.WalkingUp:\n            case SpriteHeroState.WalkingDown:\n            case SpriteHeroState.WalkingLeft:\n            case SpriteHeroState.WalkingRight:\n                this.handleWalk(dt, new GeomVector(this.movingDirectionX, 0), collider);\n                this.handleWalk(dt, new GeomVector(0, this.movingDirectionY), collider);\n                break;\n        }\n    }\n    render(drawContext) {\n        super.render(drawContext);\n    }\n    handleWalk(dt, direction, collider) {\n        const moveDirection = direction.scale(this.speed * dt);\n        const nextPosition = this._position.moveByVector(moveDirection);\n        if (collider.anyItemCollidesWith(this, nextPosition)) {\n            return;\n        }\n        this._position = this._position.moveByVector(moveDirection);\n    }\n}\n//# sourceMappingURL=hero.item.js.map","import { App } from './game/app.js';\nimport { CanvasDrawContext } from './canvas-draw-context.js';\nimport { UI } from './ui.js';\nconst canvasDiv = document.getElementById('canvas') ?? undefined;\nif (canvasDiv === undefined) {\n    console.error('no canvas div');\n    throw new Error('no canvas div');\n}\nconst context = canvasDiv.getContext('2d') ?? undefined;\nif (context === undefined) {\n    console.error('no context in canvas');\n    throw new Error('no context in canvas');\n}\nconst drawContext = new CanvasDrawContext(context);\nconst app = new App(canvasDiv, drawContext);\nconst ui = new UI(app);\nui.stopButton.addEventListener('click', (event) => {\n    app.enableAnimation(false);\n    ui.update();\n});\nui.startButton.addEventListener('click', (event) => {\n    app.enableAnimation(true);\n    ui.update();\n});\nui.stepButton.addEventListener('click', (event) => {\n    app.goToNextFrame(13);\n    ui.update();\n});\nawait app.start();\n//# sourceMappingURL=index.js.map","export class CanvasDrawContext {\n    context;\n    constructor(context) {\n        this.context = context;\n    }\n    strokeRect(x, y, w, h, options) {\n        this.context.save();\n        if (options?.width !== undefined) {\n            this.context.lineWidth = options.width;\n        }\n        if (options?.color !== undefined) {\n            this.context.strokeStyle = options.color;\n        }\n        this.context.strokeRect(x, y, w, h);\n        this.context.restore();\n    }\n    fillRect(x, y, w, h, options) {\n        this.context.save();\n        if (options?.color !== undefined) {\n            this.context.fillStyle = options.color;\n        }\n        this.context.fillRect(x, y, w, h);\n        this.context.restore();\n    }\n    drawImage(image, x, y, w, h) {\n        this.context.save();\n        this.context.drawImage(image, x, y, w, h);\n        this.context.restore();\n    }\n    drawImageCropped(image, x, y, w, h, sx, sy, sw, sh) {\n        this.context.save();\n        this.context.drawImage(image, x, y, w, h, sx, sy, sw, sh);\n        this.context.restore();\n    }\n    writeText(text, x, y, options) {\n        this.context.save();\n        if (options?.horizontalAlign !== undefined) {\n            switch (options.horizontalAlign) {\n                case 'left':\n                    this.context.textAlign = 'left';\n                    break;\n                case 'center':\n                    this.context.textAlign = 'center';\n                    break;\n                case 'right':\n                    this.context.textAlign = 'right';\n                    break;\n            }\n        }\n        if (options?.verticalAlign !== undefined) {\n            switch (options.verticalAlign) {\n                case 'top':\n                    this.context.textBaseline = 'top';\n                    break;\n                case 'center':\n                    this.context.textBaseline = 'middle';\n                    break;\n                case 'bottom':\n                    this.context.textBaseline = 'bottom';\n                    break;\n            }\n        }\n        this.context.fillText(text, x, y);\n        this.context.restore();\n    }\n}\n//# sourceMappingURL=canvas-draw-context.js.map","import { SceneDataItemType } from './scene.data.js';\nimport { EngineApp } from '../engine/engine-app.js';\nimport { GenericItem } from '../engine/scene/generic.item.js';\nimport { ChestItem } from './chest.item.js';\nimport { HeroItem } from './hero.item.js';\nexport class App extends EngineApp {\n    createSceneItem(spriteManager, dataItem) {\n        const sprite = spriteManager.getSprite(dataItem.spriteId);\n        if (dataItem.type !== undefined) {\n            switch (dataItem.type) {\n                case SceneDataItemType.Chest:\n                    return new ChestItem({ sprite, x: dataItem.x, y: dataItem.y });\n                case SceneDataItemType.Hero:\n                    return new HeroItem({ sprite, x: dataItem.x, y: dataItem.y });\n                default:\n                    console.error(`Unhandled item type '${dataItem.type}' at (x,y) = (${dataItem.x},${dataItem.y})`);\n                    throw new Error();\n            }\n        }\n        return new GenericItem({ sprite, x: dataItem.x, y: dataItem.y });\n    }\n}\n//# sourceMappingURL=app.js.map","export class UI {\n    app;\n    stopButton = document.getElementById('ui-btn-stop');\n    startButton = document.getElementById('ui-btn-start');\n    stepButton = document.getElementById('ui-btn-step');\n    constructor(app) {\n        this.app = app;\n        this.update();\n    }\n    update() {\n        this.stopButton.style.display = this.app.isAnimationRunning ? 'unset' : 'none';\n        this.startButton.style.display = this.app.isAnimationRunning ? 'none' : 'unset';\n    }\n}\n//# sourceMappingURL=ui.js.map"],"names":["TileId","assetsDir","tilesData","id","Debug01","url","Grass0","Grass1","Plant","Bush","Chest","Book","Hero","SpriteId","SpriteChestState","SpriteHeroState","spritesData","states","tileId","bbox","anchor","hitBox","label","Closed","Opening","frames","delay","Open","hitBoxAnchor","PlantOverlay","StillUp","StillDown","StillLeft","StillRight","WalkingUp","WalkingDown","WalkingLeft","WalkingRight","SceneDataItemType","sceneData","layer0","spriteId","x","y","layer1","type","layer2","layer3","FrameRateIterator","targetFps","timer","frameCountInOneSecond","fps","constructor","params","this","shouldRender","dt","Promise","resolve","EngineGame","scene","controlState","frameRateIterator","up","down","left","right","control","action","nextFrame","drawContext","processInputs","update","then","render","updateControlState","state","fpsString","writeText","horizontalAlign","verticalAlign","error","console","Intersections","rectIntersectsWithCircle","rect","circle","rectIntersectsWithRect","r1","r2","w","h","circleIntersectsWithCircle","c1","c2","diffX","diffY","Math","sqrt","r","circleIntersectsWithRect","GeomRect","equals","other","moveByVector","vector","intersectsWithRect","intersectsWithCircle","Tile","image","imageBBox","width","height","getCroppedImage","canvas","document","createElement","getContext","drawImage","croppedImage","src","toDataURL","position","drawImageCropped","TileManager","tiles","Map","loadTiles","dataTiles","dataTile","tile","reject","Image","onload","onerror","set","getTile","get","undefined","Error","scaleSprite","img","scale","Number","isInteger","originalContext","originalWidth","originalHeight","targetWidth","targetHeight","originalData","getImageData","targetCanvas","targetContext","targetData","createImageData","targetDataIndex","lineStartIndex","lineEndIndex","linePixelsRGBA","data","slice","s","length","putImageData","targetImg","SceneCollider","items","anyItemCollidesWith","checkedItem","options","sceneItem","canCollide","uniqueId","checkCollision","sprite","tolerance","sprite1","position1","sprite2","position2","hitBox1","hitBox2","Scene","collider","forEach","item","sort","a","b","GeomPoint","GeomVector","normalize","magnitude","factor","SpriteState","_bbox","firstFrameBBoxX","currentFrame","millisecBeforeNextFrame","reverse","isReversed","init","out","loopedAnimation","Sprite","_hitBox","_hitBoxAnchor","currentState","hasHitBox","selectState","reversed","find","SpriteManager","tileManager","sprites","getSprite","spriteData","createSprite","push","SCREEN_WIDTH","SCREEN_HEIGHT","EngineApp","lastTimestamp","_game","animationRunning","game","isAnimationRunning","start","spriteManager","map","createSceneItem","setupControls","window","requestAnimationFrame","gameLoop","bind","enableAnimation","enabled","goToNextFrame","drawBackground","timestamp","fillRect","color","i","strokeRect","j","addEventListener","event","code","toLowerCase","preventDefault","GenericItem","_uniqueId","_sprite","_position","_lastSpriteUpdateOut","btoa","random","ChestItem","isOpen","super","open","HeroItem","movingDirectionX","movingDirectionY","speed","collideItem","handleWalk","direction","moveDirection","nextPosition","canvasDiv","getElementById","context","save","lineWidth","strokeStyle","restore","fillStyle","sx","sy","sw","sh","text","textAlign","textBaseline","fillText","app","dataItem","ui","stopButton","startButton","stepButton","style","display"],"mappings":"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"}