{"version":3,"file":"index.js","sources":["../dist/game/textures.data.js","../dist/game/sprites.data.js","../dist/game/scene.data.js","../dist/engine/utils/frame-rate-iterator.js","../dist/engine/engine-game.js","../dist/engine/geom/intersections.js","../dist/engine/geom/geom-rect.js","../dist/engine/texture.js","../dist/engine/texture-manager.js","../dist/engine/scene/scene-collider.js","../dist/engine/scene/scene.js","../dist/engine/geom/geom-point.js","../dist/engine/geom/geom-vector.js","../dist/engine/sprite-state.js","../dist/engine/sprite.js","../dist/engine/sprite-manager.js","../dist/engine/engine-app.js","../dist/engine/scene/generic.item.js","../dist/engine/utils/random-id.js","../dist/game/chest.item.js","../dist/engine/direction.js","../dist/game/hero.item.js","../dist/index.js","../dist/canvas-draw-context.js","../dist/game/app.js","../dist/ui.js"],"sourcesContent":["export var TextureId;\n(function (TextureId) {\n    TextureId[TextureId[\"Debug01\"] = 0] = \"Debug01\";\n    TextureId[TextureId[\"Grass0\"] = 1] = \"Grass0\";\n    TextureId[TextureId[\"Grass1\"] = 2] = \"Grass1\";\n    TextureId[TextureId[\"Plant\"] = 3] = \"Plant\";\n    TextureId[TextureId[\"Bush\"] = 4] = \"Bush\";\n    TextureId[TextureId[\"Chest\"] = 5] = \"Chest\";\n    TextureId[TextureId[\"Book\"] = 6] = \"Book\";\n    TextureId[TextureId[\"Hero\"] = 7] = \"Hero\";\n})(TextureId || (TextureId = {}));\nconst assetsDir = 'assets';\nexport const texturesData = [\n    { id: TextureId.Debug01, url: `${assetsDir}/debug01.png` },\n    { id: TextureId.Grass0, url: `${assetsDir}/grass-empty.png` },\n    { id: TextureId.Grass1, url: `${assetsDir}/grass.png` },\n    { id: TextureId.Plant, url: `${assetsDir}/plant.png` },\n    { id: TextureId.Bush, url: `${assetsDir}/bush.png` },\n    { id: TextureId.Chest, url: `${assetsDir}/chest.png` },\n    { id: TextureId.Book, url: `${assetsDir}/book.png` },\n    { id: TextureId.Hero, url: `${assetsDir}/hero.png` },\n];\n//# sourceMappingURL=textures.data.js.map","import { TextureId } from './textures.data.js';\nexport var SpriteId;\n(function (SpriteId) {\n    SpriteId[\"Debug01\"] = \"debug01\";\n    SpriteId[\"Grass0\"] = \"grass0\";\n    SpriteId[\"Grass1\"] = \"grass1\";\n    SpriteId[\"Bush\"] = \"bush\";\n    SpriteId[\"Chest\"] = \"chest\";\n    SpriteId[\"Book\"] = \"book\";\n    SpriteId[\"Plant\"] = \"plant\";\n    SpriteId[\"PlantOverlay\"] = \"plant-overlay\";\n    SpriteId[\"Hero\"] = \"hero\";\n})(SpriteId || (SpriteId = {}));\nexport var SpriteChestState;\n(function (SpriteChestState) {\n    SpriteChestState[\"Closed\"] = \"closed\";\n    SpriteChestState[\"Opening\"] = \"opening\";\n    SpriteChestState[\"Open\"] = \"open\";\n})(SpriteChestState || (SpriteChestState = {}));\nexport var SpriteHeroState;\n(function (SpriteHeroState) {\n    SpriteHeroState[\"StillUp\"] = \"still-up\";\n    SpriteHeroState[\"StillDown\"] = \"still-down\";\n    SpriteHeroState[\"StillLeft\"] = \"still-left\";\n    SpriteHeroState[\"StillRight\"] = \"still-right\";\n    SpriteHeroState[\"WalkingUp\"] = \"walking-up\";\n    SpriteHeroState[\"WalkingDown\"] = \"walking-down\";\n    SpriteHeroState[\"WalkingLeft\"] = \"walking-left\";\n    SpriteHeroState[\"WalkingRight\"] = \"walking-right\";\n    SpriteHeroState[\"SwordUp\"] = \"sword-up\";\n    SpriteHeroState[\"SwordDown\"] = \"sword-down\";\n    SpriteHeroState[\"SwordLeft\"] = \"sword-left\";\n    SpriteHeroState[\"SwordRight\"] = \"sword-right\";\n})(SpriteHeroState || (SpriteHeroState = {}));\nexport const spritesData = [\n    {\n        id: SpriteId.Debug01,\n        states: [{ tileId: TextureId.Debug01, bbox: [100, 100, 250, 250], anchor: [0, -50] }],\n        hitBox: [50, 50, 100, 100],\n    },\n    { id: SpriteId.Grass0, states: [{ tileId: TextureId.Grass0 }] },\n    { id: SpriteId.Grass1, states: [{ tileId: TextureId.Grass1 }] },\n    { id: SpriteId.Bush, states: [{ tileId: TextureId.Bush }], hitBox: [3, 3, 35, 35] },\n    {\n        id: SpriteId.Chest,\n        states: [\n            { label: SpriteChestState.Closed, tileId: TextureId.Chest, bbox: [0, 0, 65, 53] },\n            { label: SpriteChestState.Opening, tileId: TextureId.Chest, bbox: [0, 0, 65, 53], frames: 3, delay: 200 },\n            { label: SpriteChestState.Open, tileId: TextureId.Chest, bbox: [132, 0, 197, 53] },\n        ],\n        hitBox: [0, 7, 59, 48],\n    },\n    { id: SpriteId.Book, states: [{ tileId: TextureId.Book }], hitBox: 'bbox' },\n    {\n        id: SpriteId.Plant,\n        states: [{ tileId: TextureId.Plant, bbox: [0, 51, 44, 86], anchor: [0, -51] }],\n        hitBox: 'bbox',\n        hitBoxAnchor: [0, -51],\n    },\n    { id: SpriteId.PlantOverlay, states: [{ tileId: TextureId.Plant, bbox: [0, 0, 44, 50] }] },\n    {\n        id: SpriteId.Hero,\n        states: [\n            { label: SpriteHeroState.StillUp, tileId: TextureId.Hero, bbox: [0, 66, 44, 134] },\n            { label: SpriteHeroState.StillDown, tileId: TextureId.Hero, bbox: [0, 0, 45, 66] },\n            { label: SpriteHeroState.StillLeft, tileId: TextureId.Hero, bbox: [3, 135, 41, 200] },\n            { label: SpriteHeroState.StillRight, tileId: TextureId.Hero, bbox: [3, 201, 41, 266] },\n            { label: SpriteHeroState.WalkingUp, tileId: TextureId.Hero, bbox: [0, 66, 44, 134], frames: 4 },\n            { label: SpriteHeroState.WalkingDown, tileId: TextureId.Hero, bbox: [0, 0, 44, 65], frames: 4 },\n            { label: SpriteHeroState.WalkingLeft, tileId: TextureId.Hero, bbox: [3, 135, 41, 200], frames: 4 },\n            { label: SpriteHeroState.WalkingRight, tileId: TextureId.Hero, bbox: [3, 201, 41, 266], frames: 4 },\n            { label: SpriteHeroState.SwordUp, tileId: TextureId.Hero, bbox: [0, 342, 50, 404], frames: 4, delay: 50 },\n            { label: SpriteHeroState.SwordDown, tileId: TextureId.Hero, bbox: [0, 267, 47, 338], frames: 4, delay: 50 },\n            { label: SpriteHeroState.SwordLeft, tileId: TextureId.Hero, bbox: [0, 407, 59, 469], frames: 4, delay: 50 },\n        ],\n        hitBox: [5, 30, 35, 65],\n    },\n];\n//# sourceMappingURL=sprites.data.js.map","import { SpriteId } from './sprites.data.js';\nexport var SceneDataItemType;\n(function (SceneDataItemType) {\n    SceneDataItemType[SceneDataItemType[\"Chest\"] = 0] = \"Chest\";\n    SceneDataItemType[SceneDataItemType[\"Hero\"] = 1] = \"Hero\";\n})(SceneDataItemType || (SceneDataItemType = {}));\nexport const sceneData = {\n    layer0: [\n        { spriteId: SpriteId.Grass0, x: 150, y: 250 },\n        { spriteId: SpriteId.Grass1, x: 189, y: 250 },\n    ],\n    layer1: [\n        { spriteId: SpriteId.Plant, x: 150, y: 100 },\n        { spriteId: SpriteId.Plant, x: 205, y: 100 },\n        { spriteId: SpriteId.Bush, x: 300, y: 210 },\n        { spriteId: SpriteId.Bush, x: 300, y: 255 },\n        { spriteId: SpriteId.Bush, x: 300, y: 300 },\n        { spriteId: SpriteId.Chest, type: SceneDataItemType.Chest, x: 100, y: 300 },\n        { spriteId: SpriteId.Book, x: 300, y: 100 },\n    ],\n    layer2: [{ spriteId: SpriteId.Hero, type: SceneDataItemType.Hero, x: 50, y: 100 }],\n    layer3: [\n        { spriteId: SpriteId.PlantOverlay, x: 150, y: 100 },\n        { spriteId: SpriteId.PlantOverlay, x: 205, y: 100 },\n    ],\n};\n//# sourceMappingURL=scene.data.js.map","export class FrameRateIterator {\n    targetFps;\n    timer = 0;\n    frameCountInOneSecond = 0;\n    fps = 0;\n    constructor(params) {\n        this.targetFps = params.targetFps;\n    }\n    shouldRender(dt) {\n        this.timer += dt;\n        if (this.timer > 1000) {\n            this.fps = this.frameCountInOneSecond;\n            this.frameCountInOneSecond = 0;\n            this.timer = 0;\n        }\n        this.frameCountInOneSecond++;\n        return Promise.resolve(true);\n    }\n}\n//# sourceMappingURL=frame-rate-iterator.js.map","import { FrameRateIterator } from './utils/frame-rate-iterator.js';\nconst TARGET_FPS = 60;\nexport class EngineGame {\n    scene;\n    controlState;\n    frameRateIterator;\n    constructor(scene) {\n        this.scene = scene;\n        this.controlState = {\n            up: false,\n            down: false,\n            left: false,\n            right: false,\n            control: false,\n            action1: false,\n            action2: false,\n        };\n        this.frameRateIterator = new FrameRateIterator({ targetFps: TARGET_FPS });\n    }\n    nextFrame(drawContext, dt) {\n        this.scene.processInputs(dt, this.controlState);\n        this.scene.update(dt);\n        this.frameRateIterator.shouldRender(dt).then(shouldRender => {\n            if (shouldRender) {\n                this.render(drawContext);\n            }\n        });\n    }\n    updateControlState(state) {\n        this.controlState.up = state.up ?? this.controlState.up;\n        this.controlState.down = state.down ?? this.controlState.down;\n        this.controlState.left = state.left ?? this.controlState.left;\n        this.controlState.right = state.right ?? this.controlState.right;\n        this.controlState.control = state.control ?? this.controlState.control;\n        this.controlState.action1 = state.action1 ?? this.controlState.action1;\n        this.controlState.action2 = state.action2 ?? this.controlState.action2;\n    }\n    render(drawContext) {\n        try {\n            this.scene.render(drawContext);\n            const fpsString = `FPS: ${this.frameRateIterator.fps}`;\n            drawContext.writeText(fpsString, 5, 5, { horizontalAlign: 'left', verticalAlign: 'top' });\n        }\n        catch (error) {\n            console.error(error);\n        }\n    }\n}\n//# sourceMappingURL=engine-game.js.map","export var Intersections;\n(function (Intersections) {\n    function rectIntersectsWithRect(r1, r2) {\n        if (r1.x > r2.x + r2.w) {\n            return false;\n        }\n        if (r1.x + r1.w < r2.x) {\n            return false;\n        }\n        if (r1.y > r2.y + r2.h) {\n            return false;\n        }\n        if (r1.y + r1.h < r2.y) {\n            return false;\n        }\n        return true;\n    }\n    Intersections.rectIntersectsWithRect = rectIntersectsWithRect;\n    function rectIntersectsWithCircle(rect, circle) {\n        return false;\n    }\n    Intersections.rectIntersectsWithCircle = rectIntersectsWithCircle;\n    function circleIntersectsWithCircle(c1, c2) {\n        const diffX = c2.x - c1.x;\n        const diffY = c2.y - c1.y;\n        return Math.sqrt(diffX * diffX + diffY * diffY) < c1.r + c2.r;\n    }\n    Intersections.circleIntersectsWithCircle = circleIntersectsWithCircle;\n    function circleIntersectsWithRect(circle, rect) {\n        return rectIntersectsWithCircle(rect, circle);\n    }\n    Intersections.circleIntersectsWithRect = circleIntersectsWithRect;\n})(Intersections || (Intersections = {}));\n//# sourceMappingURL=intersections.js.map","import { Intersections } from './intersections.js';\nexport class GeomRect {\n    x;\n    y;\n    w;\n    h;\n    constructor(x, y, w, h) {\n        this.x = x;\n        this.y = y;\n        this.w = w;\n        this.h = h;\n    }\n    equals(other) {\n        return this.x === other.x && this.y === other.y && this.w === other.w && this.h === other.h;\n    }\n    moveByVector(vector) {\n        return new GeomRect(this.x + vector.x, this.y + vector.y, this.w, this.h);\n    }\n    intersectsWithRect(rect) {\n        return Intersections.rectIntersectsWithRect(this, rect);\n    }\n    intersectsWithCircle(circle) {\n        return Intersections.rectIntersectsWithCircle(this, circle);\n    }\n}\n//# sourceMappingURL=geom-rect.js.map","import { GeomRect } from './geom/geom-rect.js';\nexport class Texture {\n    id;\n    image;\n    imageBBox;\n    constructor(id, image) {\n        this.id = id;\n        this.image = image;\n        this.imageBBox = new GeomRect(0, 0, image.width, image.height);\n    }\n    getCroppedImage(bbox) {\n        const canvas = document.createElement('canvas');\n        canvas.width = bbox.w;\n        canvas.height = bbox.h;\n        const context = canvas.getContext('2d');\n        context.drawImage(this.image, -bbox.x, -bbox.y);\n        const croppedImage = document.createElement('img');\n        croppedImage.src = canvas.toDataURL();\n        return croppedImage;\n    }\n    render(drawContext, bbox, position) {\n        if (bbox.equals(this.imageBBox)) {\n            drawContext.drawImage(this.image, position.x, position.y, this.image.width, this.image.height);\n        }\n        else {\n            drawContext.drawImageCropped(this.image, bbox.x, bbox.y, bbox.w, bbox.h, position.x, position.y, bbox.w, bbox.h);\n        }\n    }\n}\n//# sourceMappingURL=texture.js.map","import { Texture } from './texture.js';\nexport class TextureManager {\n    textures = new Map();\n    async loadTextures(dataTextures) {\n        for (const dataTexture of dataTextures) {\n            const texture = await new Promise((resolve, reject) => {\n                const image = new Image();\n                image.onload = () => {\n                    resolve(new Texture(dataTexture.id, image));\n                };\n                image.onerror = () => {\n                    reject();\n                };\n                image.src = dataTexture.url;\n            });\n            this.textures.set(dataTexture.id, texture);\n        }\n    }\n    getTexture(id) {\n        const texture = this.textures.get(id);\n        if (texture === undefined) {\n            throw new Error(`No texture for id '${id}'`);\n        }\n        return texture;\n    }\n    scaleSprite(img, scale) {\n        if (!Number.isInteger(scale)) {\n            console.error(`Invalid scale ${scale}`);\n            throw Error();\n        }\n        if (scale === 1) {\n            return img;\n        }\n        const originalCanvas = document.createElement('canvas');\n        const originalContext = originalCanvas.getContext('2d');\n        if (originalContext === null) {\n            console.error('Error creating memory canvas');\n            throw Error();\n        }\n        const originalWidth = img.width;\n        const originalHeight = img.height;\n        const targetWidth = originalWidth * scale;\n        const targetHeight = originalHeight * scale;\n        originalContext.drawImage(img, 0, 0, originalWidth, originalHeight);\n        const originalData = originalContext.getImageData(0, 0, originalWidth, originalHeight);\n        const targetCanvas = document.createElement('canvas');\n        targetCanvas.width = targetWidth;\n        targetCanvas.height = targetHeight;\n        const targetContext = targetCanvas.getContext('2d');\n        if (targetContext === null) {\n            console.error('Error creating memory canvas');\n            throw Error();\n        }\n        const targetData = targetContext.createImageData(targetWidth, targetHeight);\n        let targetDataIndex = 0;\n        for (let y = 0; y < originalHeight; y++) {\n            const lineStartIndex = y * originalWidth * 4;\n            const lineEndIndex = lineStartIndex + originalWidth * 4;\n            const linePixelsRGBA = originalData.data.slice(lineStartIndex, lineEndIndex);\n            for (let s = 0; s < scale; s++) {\n                for (let x = 0; x < linePixelsRGBA.length; x += 4) {\n                    for (let s = 0; s < scale; s++) {\n                        targetData.data[targetDataIndex++] = linePixelsRGBA[x];\n                        targetData.data[targetDataIndex++] = linePixelsRGBA[x + 1];\n                        targetData.data[targetDataIndex++] = linePixelsRGBA[x + 2];\n                        targetData.data[targetDataIndex++] = linePixelsRGBA[x + 3];\n                    }\n                }\n            }\n        }\n        targetContext.putImageData(targetData, 0, 0);\n        const targetImg = document.createElement('img');\n        targetImg.src = targetCanvas.toDataURL();\n        return targetImg;\n    }\n}\n//# sourceMappingURL=texture-manager.js.map","import { GeomRect } from '../geom/geom-rect.js';\nexport class SceneCollider {\n    items;\n    constructor(items) {\n        this.items = items;\n    }\n    anyItemCollidesWith(checkedItem, position, options) {\n        for (const sceneItem of this.items) {\n            if (!sceneItem.canCollide() || sceneItem.uniqueId === checkedItem.uniqueId) {\n                continue;\n            }\n            if (this.checkCollision(checkedItem.sprite, position, sceneItem.sprite, sceneItem.position, options?.tolerance ?? 0)) {\n                return sceneItem;\n            }\n        }\n        return undefined;\n    }\n    checkCollision(sprite1, position1, sprite2, position2, tolerance) {\n        if (sprite1.hitBox instanceof GeomRect) {\n            const hitBox1 = new GeomRect(position1.x - (sprite1.hitBoxAnchor?.x ?? 0) + sprite1.hitBox.x - tolerance, position1.y - (sprite1.hitBoxAnchor?.y ?? 0) + sprite1.hitBox.y - tolerance, sprite1.hitBox.w + tolerance, sprite1.hitBox.h + tolerance);\n            if (sprite2.hitBox instanceof GeomRect) {\n                const hitBox2 = new GeomRect(position2.x - (sprite2.hitBoxAnchor?.x ?? 0) + sprite2.hitBox.x - tolerance, position2.y - (sprite2.hitBoxAnchor?.y ?? 0) + sprite2.hitBox.y - tolerance, sprite2.hitBox.w + tolerance, sprite2.hitBox.h + tolerance);\n                return hitBox1.intersectsWithRect(hitBox2);\n            }\n        }\n        return false;\n    }\n}\n//# sourceMappingURL=scene-collider.js.map","import { SceneCollider } from './scene-collider.js';\nexport class Scene {\n    layer0;\n    layer1;\n    layer2;\n    layer3;\n    collider;\n    constructor(layer0, layer1, layer2, layer3) {\n        this.layer0 = layer0;\n        this.layer1 = layer1;\n        this.layer2 = layer2;\n        this.layer3 = layer3;\n        this.collider = new SceneCollider([...this.layer1, ...this.layer2]);\n    }\n    processInputs(dt, controlState) {\n        this.layer2.forEach(item => item.processInputs(controlState, this.collider));\n    }\n    update(dt) {\n        this.layer1.forEach(item => item.update(dt, this.collider));\n        this.layer2.forEach(item => item.update(dt, this.collider));\n    }\n    render(drawContext) {\n        this.layer0.forEach(item => item.render(drawContext));\n        const layers12Items = [...this.layer1, ...this.layer2].sort((a, b) => a.position.y + (a.hitBox?.h ?? 0) - (b.position.y + (b.hitBox?.h ?? 0)));\n        layers12Items.forEach(item => item.render(drawContext));\n        this.layer3.sort((a, b) => a.position.y - b.position.y);\n        this.layer3.forEach(item => item.render(drawContext));\n    }\n}\n//# sourceMappingURL=scene.js.map","export class GeomPoint {\n    x;\n    y;\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    moveByVector(vector) {\n        return new GeomPoint(this.x + vector.x, this.y + vector.y);\n    }\n}\n//# sourceMappingURL=geom-point.js.map","export class GeomVector {\n    x;\n    y;\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    normalize() {\n        const magnitude = Math.sqrt(this.x * this.x + this.y * this.y);\n        if (magnitude <= 0) {\n            console.error(`Vector has an invalid magnitude (${this.x}, ${this.y})`);\n            throw new Error(`Vector has an invalid magnitude (${this.x}, ${this.y})`);\n        }\n        return new GeomVector((this.x /= magnitude), (this.y /= magnitude));\n    }\n    scale(factor) {\n        return new GeomVector(this.x * factor, this.y * factor);\n    }\n}\n//# sourceMappingURL=geom-vector.js.map","import { GeomVector } from './geom/geom-vector.js';\nexport class SpriteState {\n    label;\n    texture;\n    _bbox;\n    anchor;\n    frames;\n    delay;\n    firstFrameBBoxX;\n    currentFrame;\n    millisecBeforeNextFrame;\n    reverse = false;\n    constructor(label, texture, _bbox, anchor, frames, delay) {\n        this.label = label;\n        this.texture = texture;\n        this._bbox = _bbox;\n        this.anchor = anchor;\n        this.frames = frames;\n        this.delay = delay;\n        this.firstFrameBBoxX = this._bbox.x;\n        this.currentFrame = 0;\n        this.millisecBeforeNextFrame = this.delay;\n    }\n    get bbox() {\n        return this._bbox;\n    }\n    get isReversed() {\n        return this.reverse;\n    }\n    init(reverse) {\n        this.currentFrame = reverse ? this.frames - 1 : 0;\n        this.reverse = reverse;\n        this._bbox.x = this.firstFrameBBoxX + this.currentFrame * this._bbox.w;\n    }\n    update(dt) {\n        const out = {\n            loopedAnimation: false,\n        };\n        if (this.frames > 1) {\n            this.millisecBeforeNextFrame -= dt;\n            if (this.millisecBeforeNextFrame < 0) {\n                this.millisecBeforeNextFrame = this.delay;\n                if (this.reverse) {\n                    this.currentFrame--;\n                    if (this.currentFrame < 0) {\n                        this.currentFrame = this.frames - 1;\n                        out.loopedAnimation = true;\n                    }\n                }\n                else {\n                    this.currentFrame++;\n                    if (this.currentFrame >= this.frames) {\n                        this.currentFrame = 0;\n                        out.loopedAnimation = true;\n                    }\n                }\n                this._bbox.x = this.firstFrameBBoxX + this.currentFrame * this._bbox.w;\n            }\n        }\n        return out;\n    }\n    render(drawContext, position) {\n        this.texture.render(drawContext, this._bbox, position.moveByVector(new GeomVector(-this.anchor.x, -this.anchor.y)));\n    }\n}\n//# sourceMappingURL=sprite-state.js.map","export class Sprite {\n    states;\n    _hitBox;\n    _hitBoxAnchor;\n    currentState;\n    constructor(states, _hitBox, _hitBoxAnchor) {\n        this.states = states;\n        this._hitBox = _hitBox;\n        this._hitBoxAnchor = _hitBoxAnchor;\n        if (states.length < 1) {\n            console.error('Sprite states must have at least 1 state');\n            throw new Error('');\n        }\n        this.currentState = this.states[0];\n    }\n    get bbox() {\n        return this.currentState.bbox;\n    }\n    get hitBox() {\n        return this._hitBox;\n    }\n    get hitBoxAnchor() {\n        return this._hitBoxAnchor;\n    }\n    hasHitBox() {\n        return this._hitBox !== undefined;\n    }\n    selectState(label, reverse) {\n        if (label === this.currentState.label) {\n            const reversed = reverse ?? false;\n            if (this.currentState.isReversed === reversed) {\n                return;\n            }\n        }\n        this.currentState = this.states[0];\n        const state = this.states.find(s => s.label === label);\n        if (state !== undefined) {\n            this.currentState = state;\n        }\n        this.currentState.init(reverse ?? false);\n    }\n    update(dt) {\n        return this.currentState.update(dt);\n    }\n    render(drawContext, position) {\n        this.currentState.render(drawContext, position);\n    }\n}\n//# sourceMappingURL=sprite.js.map","import { GeomPoint } from './geom/geom-point.js';\nimport { GeomRect } from './geom/geom-rect.js';\nimport { SpriteState } from './sprite-state.js';\nimport { Sprite } from './sprite.js';\nexport class SpriteManager {\n    spritesData;\n    textureManager;\n    sprites = new Map();\n    constructor(spritesData, textureManager) {\n        this.spritesData = spritesData;\n        this.textureManager = textureManager;\n    }\n    getSprite(id) {\n        const spriteData = this.spritesData.find(s => s.id === id);\n        if (spriteData === undefined) {\n            console.error(`No sprite data for id '${id}'`);\n            throw new Error();\n        }\n        let sprite = this.sprites.get(id);\n        if (sprite === undefined) {\n            sprite = this.createSprite(spriteData);\n        }\n        return sprite;\n    }\n    createSprite(spriteData) {\n        const states = [];\n        for (const state of spriteData.states) {\n            const texture = this.textureManager.getTexture(state.tileId);\n            let bbox;\n            if (state.bbox !== undefined) {\n                bbox = new GeomRect(state.bbox[0], state.bbox[1], state.bbox[2] - state.bbox[0] + 1, state.bbox[3] - state.bbox[1] + 1);\n            }\n            else {\n                bbox = texture.imageBBox;\n            }\n            let anchor;\n            if (state.anchor !== undefined) {\n                anchor = new GeomPoint(state.anchor[0], state.anchor[1]);\n            }\n            else {\n                anchor = new GeomPoint(0, 0);\n            }\n            states.push(new SpriteState(state.label, texture, bbox, anchor, state.frames ?? 1, state.delay ?? 100));\n        }\n        let hitBox;\n        if (spriteData.hitBox !== undefined) {\n            if (spriteData.hitBox === 'bbox') {\n                const bbox = states[0].bbox;\n                hitBox = new GeomRect(0, 0, bbox.w, bbox.h);\n            }\n            else {\n                hitBox = new GeomRect(spriteData.hitBox[0], spriteData.hitBox[1], spriteData.hitBox[2] - spriteData.hitBox[0] + 1, spriteData.hitBox[3] - spriteData.hitBox[1] + 1);\n            }\n        }\n        let hitBoxAnchor;\n        if (spriteData.hitBoxAnchor !== undefined) {\n            hitBoxAnchor = new GeomPoint(spriteData.hitBoxAnchor[0], spriteData.hitBoxAnchor[1]);\n        }\n        return new Sprite(states, hitBox, hitBoxAnchor);\n    }\n}\n//# sourceMappingURL=sprite-manager.js.map","import { EngineGame } from './engine-game.js';\nimport { TextureManager } from './texture-manager.js';\nimport { Scene } from './scene/scene.js';\nimport { SpriteManager } from './sprite-manager.js';\nconst SCREEN_WIDTH = 500;\nconst SCREEN_HEIGHT = 500;\nexport class EngineApp {\n    canvas;\n    drawContext;\n    lastTimestamp;\n    _game;\n    animationRunning = true;\n    constructor(canvas, drawContext) {\n        this.canvas = canvas;\n        this.drawContext = drawContext;\n    }\n    get game() {\n        return this._game;\n    }\n    get isAnimationRunning() {\n        return this.animationRunning;\n    }\n    async start(tilesData, spritesData, sceneData) {\n        this.canvas.width = SCREEN_WIDTH;\n        this.canvas.height = SCREEN_HEIGHT;\n        const tileManager = new TextureManager();\n        await tileManager.loadTextures(tilesData);\n        const spriteManager = new SpriteManager(spritesData, tileManager);\n        const scene = new Scene(sceneData.layer0.map(item => this.createSceneItem(spriteManager, item)), sceneData.layer1.map(item => this.createSceneItem(spriteManager, item)), sceneData.layer2.map(item => this.createSceneItem(spriteManager, item)), sceneData.layer3.map(item => this.createSceneItem(spriteManager, item)));\n        this._game = new EngineGame(scene);\n        this.setupControls();\n        window.requestAnimationFrame(this.gameLoop.bind(this));\n    }\n    enableAnimation(enabled) {\n        this.animationRunning = enabled;\n        if (this.animationRunning) {\n            window.requestAnimationFrame(this.gameLoop.bind(this));\n        }\n    }\n    goToNextFrame(dt) {\n        this.drawBackground();\n        this._game.nextFrame(this.drawContext, dt);\n        this._game.updateControlState({\n            action1: false,\n            action2: false,\n        });\n    }\n    gameLoop(timestamp) {\n        this.lastTimestamp = this.lastTimestamp ?? timestamp;\n        const dt = timestamp - this.lastTimestamp;\n        this.lastTimestamp = timestamp;\n        this.goToNextFrame(dt);\n        if (this.animationRunning) {\n            window.requestAnimationFrame(this.gameLoop.bind(this));\n        }\n    }\n    drawBackground() {\n        this.drawContext.fillRect(0, 0, SCREEN_WIDTH, SCREEN_HEIGHT, { color: '#999' });\n        for (let i = 50; i < SCREEN_WIDTH; i += 50) {\n            this.drawContext.strokeRect(i, 0, 50, SCREEN_WIDTH, { color: 'black' });\n        }\n        for (let i = 25; i < SCREEN_WIDTH; i += 25) {\n            this.drawContext.strokeRect(i, 0, 25, SCREEN_WIDTH, { color: '#888' });\n        }\n        for (let j = 50; j < SCREEN_HEIGHT; j += 50) {\n            this.drawContext.strokeRect(0, j, SCREEN_HEIGHT, 50, { color: 'black' });\n        }\n        for (let j = 25; j < SCREEN_HEIGHT; j += 25) {\n            this.drawContext.strokeRect(0, j, SCREEN_HEIGHT, 25, { color: '#888' });\n        }\n    }\n    setupControls() {\n        window.addEventListener('keydown', (event) => {\n            switch (event.code.toLowerCase()) {\n                case 'arrowup':\n                    this.game.updateControlState({ up: true });\n                    event.preventDefault();\n                    break;\n                case 'arrowdown':\n                    this.game.updateControlState({ down: true });\n                    event.preventDefault();\n                    break;\n                case 'arrowleft':\n                    this.game.updateControlState({ left: true });\n                    event.preventDefault();\n                    break;\n                case 'arrowright':\n                    this.game.updateControlState({ right: true });\n                    event.preventDefault();\n                    break;\n                case 'keyz':\n                    this.game.updateControlState({ control: true });\n                    event.preventDefault();\n                    break;\n            }\n        });\n        window.addEventListener('keyup', (event) => {\n            switch (event.code.toLowerCase()) {\n                case 'arrowup':\n                    this.game.updateControlState({ up: false });\n                    event.preventDefault();\n                    break;\n                case 'arrowdown':\n                    this.game.updateControlState({ down: false });\n                    event.preventDefault();\n                    break;\n                case 'arrowleft':\n                    this.game.updateControlState({ left: false });\n                    event.preventDefault();\n                    break;\n                case 'arrowright':\n                    this.game.updateControlState({ right: false });\n                    event.preventDefault();\n                    break;\n                case 'keyz':\n                    this.game.updateControlState({ control: false });\n                    event.preventDefault();\n                    break;\n                case 'keyx':\n                    this.game.updateControlState({ action1: true });\n                    event.preventDefault();\n                    break;\n                case 'keyc':\n                    this.game.updateControlState({ action2: true });\n                    event.preventDefault();\n                    break;\n            }\n        });\n    }\n}\n//# sourceMappingURL=engine-app.js.map","import { GeomPoint } from '../geom/geom-point.js';\nimport { getRandomId } from '../utils/random-id.js';\nexport class GenericItem {\n    _uniqueId;\n    _sprite;\n    _position;\n    constructor(params) {\n        this._uniqueId = getRandomId();\n        this._sprite = params.sprite;\n        this._position = new GeomPoint(params.x, params.y);\n    }\n    canCollide() {\n        return this._sprite.hasHitBox();\n    }\n    get uniqueId() {\n        return this._uniqueId;\n    }\n    get sprite() {\n        return this._sprite;\n    }\n    get position() {\n        return this._position;\n    }\n    get bbox() {\n        return this._sprite.bbox;\n    }\n    get hitBox() {\n        return this._sprite.hitBox;\n    }\n    processInputs(controlState, collider) { }\n    update(dt, collider) {\n        const spriteUpdateOut = this._sprite.update(dt);\n        if (spriteUpdateOut.loopedAnimation) {\n            this.spriteAnimationLooped();\n        }\n    }\n    spriteAnimationLooped() { }\n    render(drawContext) {\n        this._sprite.render(drawContext, this._position);\n    }\n}\n//# sourceMappingURL=generic.item.js.map","export function getRandomId() {\n    return btoa(`${Math.random() * 99999}`);\n}\n//# sourceMappingURL=random-id.js.map","import { SpriteChestState } from './sprites.data.js';\nimport { GenericItem } from '../engine/scene/generic.item.js';\nexport class ChestItem extends GenericItem {\n    isOpen = false;\n    constructor(params) {\n        super(params);\n        this._sprite.selectState(SpriteChestState.Closed);\n    }\n    open() {\n        if (this.isOpen) {\n            this._sprite.selectState(SpriteChestState.Opening, true);\n            this.isOpen = false;\n        }\n        else {\n            this._sprite.selectState(SpriteChestState.Opening);\n            this.isOpen = true;\n        }\n    }\n    update(dt, collider) {\n        super.update(dt, collider);\n    }\n    spriteAnimationLooped() {\n        this._sprite.selectState(this.isOpen ? SpriteChestState.Open : SpriteChestState.Closed);\n    }\n}\n//# sourceMappingURL=chest.item.js.map","export var Direction;\n(function (Direction) {\n    Direction[Direction[\"Up\"] = 0] = \"Up\";\n    Direction[Direction[\"Down\"] = 1] = \"Down\";\n    Direction[Direction[\"Left\"] = 2] = \"Left\";\n    Direction[Direction[\"Right\"] = 3] = \"Right\";\n})(Direction || (Direction = {}));\n//# sourceMappingURL=direction.js.map","import { GeomVector } from '../engine/geom/geom-vector.js';\nimport { GenericItem } from '../engine/scene/generic.item.js';\nimport { SpriteHeroState } from './sprites.data.js';\nimport { ChestItem } from './chest.item.js';\nimport { Direction } from '../engine/direction.js';\nconst SPEED_WALKING = 0.1;\nconst SPEED_RUNNING = 0.2;\nexport class HeroItem extends GenericItem {\n    movingDirectionX;\n    movingDirectionY;\n    primaryDirection;\n    state;\n    previousState;\n    speed = SPEED_WALKING;\n    usingSword;\n    constructor(params) {\n        super(params);\n        this.state = SpriteHeroState.StillDown;\n        this.previousState = this.state;\n        this.movingDirectionX = 0;\n        this.movingDirectionY = 0;\n        this.usingSword = false;\n    }\n    processInputs(controlState, collider) {\n        super.processInputs(controlState, collider);\n        if (this.usingSword) {\n            return;\n        }\n        this.state = SpriteHeroState.StillDown;\n        this.primaryDirection = undefined;\n        this.movingDirectionX = 0;\n        if (controlState.left) {\n            this.movingDirectionX = -1;\n            this.state = SpriteHeroState.WalkingLeft;\n            if (this.primaryDirection !== Direction.Up && this.primaryDirection !== Direction.Down) {\n                this.primaryDirection = Direction.Left;\n            }\n        }\n        else if (controlState.right) {\n            this.movingDirectionX = 1;\n            this.state = SpriteHeroState.WalkingRight;\n            if (this.primaryDirection !== Direction.Up && this.primaryDirection !== Direction.Down) {\n                this.primaryDirection = Direction.Right;\n            }\n        }\n        this.movingDirectionY = 0;\n        if (controlState.up) {\n            this.movingDirectionY = -1;\n            this.state = SpriteHeroState.WalkingUp;\n            if (this.primaryDirection !== Direction.Left && this.primaryDirection !== Direction.Right) {\n                this.primaryDirection = Direction.Up;\n            }\n        }\n        else if (controlState.down) {\n            this.movingDirectionY = 1;\n            this.state = SpriteHeroState.WalkingDown;\n            if (this.primaryDirection !== Direction.Left && this.primaryDirection !== Direction.Right) {\n                this.primaryDirection = Direction.Down;\n            }\n        }\n        if (controlState.action2) {\n            this.previousState = this.state;\n            switch (this.primaryDirection) {\n                case Direction.Up:\n                    this.state = SpriteHeroState.SwordUp;\n                    break;\n                case Direction.Down:\n                    this.state = SpriteHeroState.SwordDown;\n                    break;\n                case Direction.Left:\n                    this.state = SpriteHeroState.SwordLeft;\n                    break;\n            }\n            this.usingSword = true;\n        }\n        this._sprite.selectState(this.state);\n        this.speed = controlState.control ? SPEED_RUNNING : SPEED_WALKING;\n        if (controlState.action1) {\n            const collideItem = collider.anyItemCollidesWith(this, this._position, { tolerance: 5 });\n            if (collideItem !== undefined && collideItem instanceof ChestItem) {\n                const chest = collideItem;\n                chest.open();\n            }\n        }\n    }\n    update(dt, collider) {\n        super.update(dt, collider);\n        switch (this.state) {\n            case SpriteHeroState.WalkingUp:\n            case SpriteHeroState.WalkingDown:\n            case SpriteHeroState.WalkingLeft:\n            case SpriteHeroState.WalkingRight:\n                this.handleWalk(dt, new GeomVector(this.movingDirectionX, 0), collider);\n                this.handleWalk(dt, new GeomVector(0, this.movingDirectionY), collider);\n                break;\n        }\n    }\n    spriteAnimationLooped() {\n        if (this.usingSword) {\n            this._sprite.selectState(this.previousState);\n            this.state = this.previousState;\n            this.usingSword = false;\n        }\n    }\n    render(drawContext) {\n        super.render(drawContext);\n    }\n    handleWalk(dt, direction, collider) {\n        const moveDirection = direction.scale(this.speed * dt);\n        const nextPosition = this._position.moveByVector(moveDirection);\n        if (collider.anyItemCollidesWith(this, nextPosition)) {\n            return;\n        }\n        this._position = this._position.moveByVector(moveDirection);\n    }\n}\n//# sourceMappingURL=hero.item.js.map","import { App } from './game/app.js';\nimport { CanvasDrawContext } from './canvas-draw-context.js';\nimport { UI } from './ui.js';\nimport { texturesData } from './game/textures.data.js';\nimport { spritesData } from './game/sprites.data.js';\nimport { sceneData } from './game/scene.data.js';\nconst canvasDiv = document.getElementById('canvas') ?? undefined;\nif (canvasDiv === undefined) {\n    console.error('no canvas div');\n    throw new Error('no canvas div');\n}\nconst context = canvasDiv.getContext('2d') ?? undefined;\nif (context === undefined) {\n    console.error('no context in canvas');\n    throw new Error('no context in canvas');\n}\nconst drawContext = new CanvasDrawContext(context);\nconst app = new App(canvasDiv, drawContext);\nconst ui = new UI(app);\nui.stopButton.addEventListener('click', (event) => {\n    app.enableAnimation(false);\n    ui.update();\n});\nui.startButton.addEventListener('click', (event) => {\n    app.enableAnimation(true);\n    ui.update();\n});\nui.stepButton.addEventListener('click', (event) => {\n    app.goToNextFrame(13);\n    ui.update();\n});\nawait app.start(texturesData, spritesData, sceneData);\n//# sourceMappingURL=index.js.map","export class CanvasDrawContext {\n    context;\n    constructor(context) {\n        this.context = context;\n    }\n    strokeRect(x, y, w, h, options) {\n        this.context.save();\n        if (options?.width !== undefined) {\n            this.context.lineWidth = options.width;\n        }\n        if (options?.color !== undefined) {\n            this.context.strokeStyle = options.color;\n        }\n        this.context.strokeRect(x, y, w, h);\n        this.context.restore();\n    }\n    fillRect(x, y, w, h, options) {\n        this.context.save();\n        if (options?.color !== undefined) {\n            this.context.fillStyle = options.color;\n        }\n        this.context.fillRect(x, y, w, h);\n        this.context.restore();\n    }\n    drawImage(image, x, y, w, h) {\n        this.context.save();\n        this.context.drawImage(image, x, y, w, h);\n        this.context.restore();\n    }\n    drawImageCropped(image, x, y, w, h, sx, sy, sw, sh) {\n        this.context.save();\n        this.context.drawImage(image, x, y, w, h, sx, sy, sw, sh);\n        this.context.restore();\n    }\n    writeText(text, x, y, options) {\n        this.context.save();\n        if (options?.horizontalAlign !== undefined) {\n            switch (options.horizontalAlign) {\n                case 'left':\n                    this.context.textAlign = 'left';\n                    break;\n                case 'center':\n                    this.context.textAlign = 'center';\n                    break;\n                case 'right':\n                    this.context.textAlign = 'right';\n                    break;\n            }\n        }\n        if (options?.verticalAlign !== undefined) {\n            switch (options.verticalAlign) {\n                case 'top':\n                    this.context.textBaseline = 'top';\n                    break;\n                case 'center':\n                    this.context.textBaseline = 'middle';\n                    break;\n                case 'bottom':\n                    this.context.textBaseline = 'bottom';\n                    break;\n            }\n        }\n        this.context.fillText(text, x, y);\n        this.context.restore();\n    }\n}\n//# sourceMappingURL=canvas-draw-context.js.map","import { SceneDataItemType } from './scene.data.js';\nimport { EngineApp } from '../engine/engine-app.js';\nimport { GenericItem } from '../engine/scene/generic.item.js';\nimport { ChestItem } from './chest.item.js';\nimport { HeroItem } from './hero.item.js';\nexport class App extends EngineApp {\n    createSceneItem(spriteManager, dataItem) {\n        const sprite = spriteManager.getSprite(dataItem.spriteId);\n        if (dataItem.type !== undefined) {\n            switch (dataItem.type) {\n                case SceneDataItemType.Chest:\n                    return new ChestItem({ sprite, x: dataItem.x, y: dataItem.y });\n                case SceneDataItemType.Hero:\n                    return new HeroItem({ sprite, x: dataItem.x, y: dataItem.y });\n                default:\n                    console.error(`Unhandled item type '${dataItem.type}' at (x,y) = (${dataItem.x},${dataItem.y})`);\n                    throw new Error();\n            }\n        }\n        return new GenericItem({ sprite, x: dataItem.x, y: dataItem.y });\n    }\n}\n//# sourceMappingURL=app.js.map","export class UI {\n    app;\n    stopButton = document.getElementById('ui-btn-stop');\n    startButton = document.getElementById('ui-btn-start');\n    stepButton = document.getElementById('ui-btn-step');\n    constructor(app) {\n        this.app = app;\n        this.update();\n    }\n    update() {\n        this.stopButton.style.display = this.app.isAnimationRunning ? 'unset' : 'none';\n        this.startButton.style.display = this.app.isAnimationRunning ? 'none' : 'unset';\n    }\n}\n//# sourceMappingURL=ui.js.map"],"names":["TextureId","assetsDir","texturesData","id","Debug01","url","Grass0","Grass1","Plant","Bush","Chest","Book","Hero","SpriteId","SpriteChestState","SpriteHeroState","spritesData","states","tileId","bbox","anchor","hitBox","label","Closed","Opening","frames","delay","Open","hitBoxAnchor","PlantOverlay","StillUp","StillDown","StillLeft","StillRight","WalkingUp","WalkingDown","WalkingLeft","WalkingRight","SwordUp","SwordDown","SwordLeft","SceneDataItemType","sceneData","layer0","spriteId","x","y","layer1","type","layer2","layer3","FrameRateIterator","targetFps","timer","frameCountInOneSecond","fps","constructor","params","this","shouldRender","dt","Promise","resolve","EngineGame","scene","controlState","frameRateIterator","up","down","left","right","control","action1","action2","nextFrame","drawContext","processInputs","update","then","render","updateControlState","state","fpsString","writeText","horizontalAlign","verticalAlign","error","console","Intersections","rectIntersectsWithCircle","rect","circle","rectIntersectsWithRect","r1","r2","w","h","circleIntersectsWithCircle","c1","c2","diffX","diffY","Math","sqrt","r","circleIntersectsWithRect","GeomRect","equals","other","moveByVector","vector","intersectsWithRect","intersectsWithCircle","Texture","image","imageBBox","width","height","getCroppedImage","canvas","document","createElement","getContext","drawImage","croppedImage","src","toDataURL","position","drawImageCropped","TextureManager","textures","Map","loadTextures","dataTextures","dataTexture","texture","reject","Image","onload","onerror","set","getTexture","get","undefined","Error","scaleSprite","img","scale","Number","isInteger","originalContext","originalWidth","originalHeight","targetWidth","targetHeight","originalData","getImageData","targetCanvas","targetContext","targetData","createImageData","targetDataIndex","lineStartIndex","lineEndIndex","linePixelsRGBA","data","slice","s","length","putImageData","targetImg","SceneCollider","items","anyItemCollidesWith","checkedItem","options","sceneItem","canCollide","uniqueId","checkCollision","sprite","tolerance","sprite1","position1","sprite2","position2","hitBox1","hitBox2","Scene","collider","forEach","item","sort","a","b","GeomPoint","GeomVector","normalize","magnitude","factor","SpriteState","_bbox","firstFrameBBoxX","currentFrame","millisecBeforeNextFrame","reverse","isReversed","init","out","loopedAnimation","Sprite","_hitBox","_hitBoxAnchor","currentState","hasHitBox","selectState","reversed","find","SpriteManager","textureManager","sprites","getSprite","spriteData","createSprite","push","SCREEN_WIDTH","SCREEN_HEIGHT","EngineApp","lastTimestamp","_game","animationRunning","game","isAnimationRunning","start","tilesData","tileManager","spriteManager","map","createSceneItem","setupControls","window","requestAnimationFrame","gameLoop","bind","enableAnimation","enabled","goToNextFrame","drawBackground","timestamp","fillRect","color","i","strokeRect","j","addEventListener","event","code","toLowerCase","preventDefault","GenericItem","_uniqueId","_sprite","_position","btoa","random","spriteAnimationLooped","ChestItem","isOpen","super","open","Direction","HeroItem","movingDirectionX","movingDirectionY","primaryDirection","previousState","speed","usingSword","Up","Down","Left","Right","collideItem","handleWalk","direction","moveDirection","nextPosition","canvasDiv","getElementById","context","save","lineWidth","strokeStyle","restore","fillStyle","sx","sy","sw","sh","text","textAlign","textBaseline","fillText","app","dataItem","ui","stopButton","startButton","stepButton","style","display"],"mappings":"AAAO,IAAIA,GACX,SAAWA,GACPA,EAAUA,EAAmB,QAAI,GAAK,UACtCA,EAAUA,EAAkB,OAAI,GAAK,SACrCA,EAAUA,EAAkB,OAAI,GAAK,SACrCA,EAAUA,EAAiB,MAAI,GAAK,QACpCA,EAAUA,EAAgB,KAAI,GAAK,OACnCA,EAAUA,EAAiB,MAAI,GAAK,QACpCA,EAAUA,EAAgB,KAAI,GAAK,OACnCA,EAAUA,EAAgB,KAAI,GAAK,MACtC,CATD,CASGA,IAAcA,EAAY,CAAE,IAC/B,MAAMC,EAAY,SACLC,EAAe,CACxB,CAAEC,GAAIH,EAAUI,QAASC,IAAK,GAAGJ,iBACjC,CAAEE,GAAIH,EAAUM,OAAQD,IAAK,GAAGJ,qBAChC,CAAEE,GAAIH,EAAUO,OAAQF,IAAK,GAAGJ,eAChC,CAAEE,GAAIH,EAAUQ,MAAOH,IAAK,GAAGJ,eAC/B,CAAEE,GAAIH,EAAUS,KAAMJ,IAAK,GAAGJ,cAC9B,CAAEE,GAAIH,EAAUU,MAAOL,IAAK,GAAGJ,eAC/B,CAAEE,GAAIH,EAAUW,KAAMN,IAAK,GAAGJ,cAC9B,CAAEE,GAAIH,EAAUY,KAAMP,IAAK,GAAGJ,eCnB3B,IAAIY,EAYAC,EAMAC,GAjBX,SAAWF,GACPA,EAAkB,QAAI,UACtBA,EAAiB,OAAI,SACrBA,EAAiB,OAAI,SACrBA,EAAe,KAAI,OACnBA,EAAgB,MAAI,QACpBA,EAAe,KAAI,OACnBA,EAAgB,MAAI,QACpBA,EAAuB,aAAI,gBAC3BA,EAAe,KAAI,MACtB,CAVD,CAUGA,IAAaA,EAAW,CAAE,IAE7B,SAAWC,GACPA,EAAyB,OAAI,SAC7BA,EAA0B,QAAI,UAC9BA,EAAuB,KAAI,MAC9B,CAJD,CAIGA,IAAqBA,EAAmB,CAAE,IAE7C,SAAWC,GACPA,EAAyB,QAAI,WAC7BA,EAA2B,UAAI,aAC/BA,EAA2B,UAAI,aAC/BA,EAA4B,WAAI,cAChCA,EAA2B,UAAI,aAC/BA,EAA6B,YAAI,eACjCA,EAA6B,YAAI,eACjCA,EAA8B,aAAI,gBAClCA,EAAyB,QAAI,WAC7BA,EAA2B,UAAI,aAC/BA,EAA2B,UAAI,aAC/BA,EAA4B,WAAI,aACnC,CAbD,CAaGA,IAAoBA,EAAkB,CAAE,IACpC,MAAMC,EAAc,CACvB,CACIb,GAAIU,EAAST,QACba,OAAQ,CAAC,CAAEC,OAAQlB,EAAUI,QAASe,KAAM,CAAC,IAAK,IAAK,IAAK,KAAMC,OAAQ,CAAC,GAAI,MAC/EC,OAAQ,CAAC,GAAI,GAAI,IAAK,MAE1B,CAAElB,GAAIU,EAASP,OAAQW,OAAQ,CAAC,CAAEC,OAAQlB,EAAUM,UACpD,CAAEH,GAAIU,EAASN,OAAQU,OAAQ,CAAC,CAAEC,OAAQlB,EAAUO,UACpD,CAAEJ,GAAIU,EAASJ,KAAMQ,OAAQ,CAAC,CAAEC,OAAQlB,EAAUS,OAASY,OAAQ,CAAC,EAAG,EAAG,GAAI,KAC9E,CACIlB,GAAIU,EAASH,MACbO,OAAQ,CACJ,CAAEK,MAAOR,EAAiBS,OAAQL,OAAQlB,EAAUU,MAAOS,KAAM,CAAC,EAAG,EAAG,GAAI,KAC5E,CAAEG,MAAOR,EAAiBU,QAASN,OAAQlB,EAAUU,MAAOS,KAAM,CAAC,EAAG,EAAG,GAAI,IAAKM,OAAQ,EAAGC,MAAO,KACpG,CAAEJ,MAAOR,EAAiBa,KAAMT,OAAQlB,EAAUU,MAAOS,KAAM,CAAC,IAAK,EAAG,IAAK,MAEjFE,OAAQ,CAAC,EAAG,EAAG,GAAI,KAEvB,CAAElB,GAAIU,EAASF,KAAMM,OAAQ,CAAC,CAAEC,OAAQlB,EAAUW,OAASU,OAAQ,QACnE,CACIlB,GAAIU,EAASL,MACbS,OAAQ,CAAC,CAAEC,OAAQlB,EAAUQ,MAAOW,KAAM,CAAC,EAAG,GAAI,GAAI,IAAKC,OAAQ,CAAC,GAAI,MACxEC,OAAQ,OACRO,aAAc,CAAC,GAAI,KAEvB,CAAEzB,GAAIU,EAASgB,aAAcZ,OAAQ,CAAC,CAAEC,OAAQlB,EAAUQ,MAAOW,KAAM,CAAC,EAAG,EAAG,GAAI,OAClF,CACIhB,GAAIU,EAASD,KACbK,OAAQ,CACJ,CAAEK,MAAOP,EAAgBe,QAASZ,OAAQlB,EAAUY,KAAMO,KAAM,CAAC,EAAG,GAAI,GAAI,MAC5E,CAAEG,MAAOP,EAAgBgB,UAAWb,OAAQlB,EAAUY,KAAMO,KAAM,CAAC,EAAG,EAAG,GAAI,KAC7E,CAAEG,MAAOP,EAAgBiB,UAAWd,OAAQlB,EAAUY,KAAMO,KAAM,CAAC,EAAG,IAAK,GAAI,MAC/E,CAAEG,MAAOP,EAAgBkB,WAAYf,OAAQlB,EAAUY,KAAMO,KAAM,CAAC,EAAG,IAAK,GAAI,MAChF,CAAEG,MAAOP,EAAgBmB,UAAWhB,OAAQlB,EAAUY,KAAMO,KAAM,CAAC,EAAG,GAAI,GAAI,KAAMM,OAAQ,GAC5F,CAAEH,MAAOP,EAAgBoB,YAAajB,OAAQlB,EAAUY,KAAMO,KAAM,CAAC,EAAG,EAAG,GAAI,IAAKM,OAAQ,GAC5F,CAAEH,MAAOP,EAAgBqB,YAAalB,OAAQlB,EAAUY,KAAMO,KAAM,CAAC,EAAG,IAAK,GAAI,KAAMM,OAAQ,GAC/F,CAAEH,MAAOP,EAAgBsB,aAAcnB,OAAQlB,EAAUY,KAAMO,KAAM,CAAC,EAAG,IAAK,GAAI,KAAMM,OAAQ,GAChG,CAAEH,MAAOP,EAAgBuB,QAASpB,OAAQlB,EAAUY,KAAMO,KAAM,CAAC,EAAG,IAAK,GAAI,KAAMM,OAAQ,EAAGC,MAAO,IACrG,CAAEJ,MAAOP,EAAgBwB,UAAWrB,OAAQlB,EAAUY,KAAMO,KAAM,CAAC,EAAG,IAAK,GAAI,KAAMM,OAAQ,EAAGC,MAAO,IACvG,CAAEJ,MAAOP,EAAgByB,UAAWtB,OAAQlB,EAAUY,KAAMO,KAAM,CAAC,EAAG,IAAK,GAAI,KAAMM,OAAQ,EAAGC,MAAO,KAE3GL,OAAQ,CAAC,EAAG,GAAI,GAAI,MC1ErB,IAAIoB,GACX,SAAWA,GACPA,EAAkBA,EAAyB,MAAI,GAAK,QACpDA,EAAkBA,EAAwB,KAAI,GAAK,MACtD,CAHD,CAGGA,IAAsBA,EAAoB,CAAE,IACxC,MAAMC,EAAY,CACrBC,OAAQ,CACJ,CAAEC,SAAU/B,EAASP,OAAQuC,EAAG,IAAKC,EAAG,KACxC,CAAEF,SAAU/B,EAASN,OAAQsC,EAAG,IAAKC,EAAG,MAE5CC,OAAQ,CACJ,CAAEH,SAAU/B,EAASL,MAAOqC,EAAG,IAAKC,EAAG,KACvC,CAAEF,SAAU/B,EAASL,MAAOqC,EAAG,IAAKC,EAAG,KACvC,CAAEF,SAAU/B,EAASJ,KAAMoC,EAAG,IAAKC,EAAG,KACtC,CAAEF,SAAU/B,EAASJ,KAAMoC,EAAG,IAAKC,EAAG,KACtC,CAAEF,SAAU/B,EAASJ,KAAMoC,EAAG,IAAKC,EAAG,KACtC,CAAEF,SAAU/B,EAASH,MAAOsC,KAAMP,EAAkB/B,MAAOmC,EAAG,IAAKC,EAAG,KACtE,CAAEF,SAAU/B,EAASF,KAAMkC,EAAG,IAAKC,EAAG,MAE1CG,OAAQ,CAAC,CAAEL,SAAU/B,EAASD,KAAMoC,KAAMP,EAAkB7B,KAAMiC,EAAG,GAAIC,EAAG,MAC5EI,OAAQ,CACJ,CAAEN,SAAU/B,EAASgB,aAAcgB,EAAG,IAAKC,EAAG,KAC9C,CAAEF,SAAU/B,EAASgB,aAAcgB,EAAG,IAAKC,EAAG,OCvB/C,MAAMK,EACTC,UACAC,MAAQ,EACRC,sBAAwB,EACxBC,IAAM,EACN,WAAAC,CAAYC,GACRC,KAAKN,UAAYK,EAAOL,SAC3B,CACD,YAAAO,CAAaC,GAQT,OAPAF,KAAKL,OAASO,EACVF,KAAKL,MAAQ,MACbK,KAAKH,IAAMG,KAAKJ,sBAChBI,KAAKJ,sBAAwB,EAC7BI,KAAKL,MAAQ,GAEjBK,KAAKJ,wBACEO,QAAQC,SAAQ,EAC1B,ECfE,MAAMC,EACTC,MACAC,aACAC,kBACA,WAAAV,CAAYQ,GACRN,KAAKM,MAAQA,EACbN,KAAKO,aAAe,CAChBE,IAAI,EACJC,MAAM,EACNC,MAAM,EACNC,OAAO,EACPC,SAAS,EACTC,SAAS,EACTC,SAAS,GAEbf,KAAKQ,kBAAoB,IAAIf,EAAkB,CAAEC,UAhBtC,IAiBd,CACD,SAAAsB,CAAUC,EAAaf,GACnBF,KAAKM,MAAMY,cAAchB,EAAIF,KAAKO,cAClCP,KAAKM,MAAMa,OAAOjB,GAClBF,KAAKQ,kBAAkBP,aAAaC,GAAIkB,MAAKnB,IACrCA,GACAD,KAAKqB,OAAOJ,EACf,GAER,CACD,kBAAAK,CAAmBC,GACfvB,KAAKO,aAAaE,GAAKc,EAAMd,IAAMT,KAAKO,aAAaE,GACrDT,KAAKO,aAAaG,KAAOa,EAAMb,MAAQV,KAAKO,aAAaG,KACzDV,KAAKO,aAAaI,KAAOY,EAAMZ,MAAQX,KAAKO,aAAaI,KACzDX,KAAKO,aAAaK,MAAQW,EAAMX,OAASZ,KAAKO,aAAaK,MAC3DZ,KAAKO,aAAaM,QAAUU,EAAMV,SAAWb,KAAKO,aAAaM,QAC/Db,KAAKO,aAAaO,QAAUS,EAAMT,SAAWd,KAAKO,aAAaO,QAC/Dd,KAAKO,aAAaQ,QAAUQ,EAAMR,SAAWf,KAAKO,aAAaQ,OAClE,CACD,MAAAM,CAAOJ,GACH,IACIjB,KAAKM,MAAMe,OAAOJ,GAClB,MAAMO,EAAY,QAAQxB,KAAKQ,kBAAkBX,MACjDoB,EAAYQ,UAAUD,EAAW,EAAG,EAAG,CAAEE,gBAAiB,OAAQC,cAAe,OACpF,CACD,MAAOC,GACHC,QAAQD,MAAMA,EACjB,CACJ,EC9CE,IAAIE,GACX,SAAWA,GAiBP,SAASC,EAAyBC,EAAMC,GACpC,OAAO,CACV,CAHDH,EAAcI,uBAfd,SAAgCC,EAAIC,GAChC,QAAID,EAAGhD,EAAIiD,EAAGjD,EAAIiD,EAAGC,OAGjBF,EAAGhD,EAAIgD,EAAGE,EAAID,EAAGjD,OAGjBgD,EAAG/C,EAAIgD,EAAGhD,EAAIgD,EAAGE,MAGjBH,EAAG/C,EAAI+C,EAAGG,EAAIF,EAAGhD,IAIxB,EAKD0C,EAAcC,yBAA2BA,EAMzCD,EAAcS,2BALd,SAAoCC,EAAIC,GACpC,MAAMC,EAAQD,EAAGtD,EAAIqD,EAAGrD,EAClBwD,EAAQF,EAAGrD,EAAIoD,EAAGpD,EACxB,OAAOwD,KAAKC,KAAKH,EAAQA,EAAQC,EAAQA,GAASH,EAAGM,EAAIL,EAAGK,CAC/D,EAKDhB,EAAciB,yBAHd,SAAkCd,EAAQD,GACtC,OAVO,CAWV,CAEJ,CA/BD,CA+BGF,IAAkBA,EAAgB,CAAA,IC/B9B,MAAMkB,EACT7D,EACAC,EACAiD,EACAC,EACA,WAAAxC,CAAYX,EAAGC,EAAGiD,EAAGC,GACjBtC,KAAKb,EAAIA,EACTa,KAAKZ,EAAIA,EACTY,KAAKqC,EAAIA,EACTrC,KAAKsC,EAAIA,CACZ,CACD,MAAAW,CAAOC,GACH,OAAOlD,KAAKb,IAAM+D,EAAM/D,GAAKa,KAAKZ,IAAM8D,EAAM9D,GAAKY,KAAKqC,IAAMa,EAAMb,GAAKrC,KAAKsC,IAAMY,EAAMZ,CAC7F,CACD,YAAAa,CAAaC,GACT,OAAO,IAAIJ,EAAShD,KAAKb,EAAIiE,EAAOjE,EAAGa,KAAKZ,EAAIgE,EAAOhE,EAAGY,KAAKqC,EAAGrC,KAAKsC,EAC1E,CACD,kBAAAe,CAAmBrB,GACf,OAAOF,EAAcI,uBAAuBlC,KAAMgC,EACrD,CACD,oBAAAsB,CAAqBrB,GACjB,OAAOH,EAAcC,yBAAyB/B,KAAMiC,EACvD,ECtBE,MAAMsB,EACT9G,GACA+G,MACAC,UACA,WAAA3D,CAAYrD,EAAI+G,GACZxD,KAAKvD,GAAKA,EACVuD,KAAKwD,MAAQA,EACbxD,KAAKyD,UAAY,IAAIT,EAAS,EAAG,EAAGQ,EAAME,MAAOF,EAAMG,OAC1D,CACD,eAAAC,CAAgBnG,GACZ,MAAMoG,EAASC,SAASC,cAAc,UACtCF,EAAOH,MAAQjG,EAAK4E,EACpBwB,EAAOF,OAASlG,EAAK6E,EACLuB,EAAOG,WAAW,MAC1BC,UAAUjE,KAAKwD,OAAQ/F,EAAK0B,GAAI1B,EAAK2B,GAC7C,MAAM8E,EAAeJ,SAASC,cAAc,OAE5C,OADAG,EAAaC,IAAMN,EAAOO,YACnBF,CACV,CACD,MAAA7C,CAAOJ,EAAaxD,EAAM4G,GAClB5G,EAAKwF,OAAOjD,KAAKyD,WACjBxC,EAAYgD,UAAUjE,KAAKwD,MAAOa,EAASlF,EAAGkF,EAASjF,EAAGY,KAAKwD,MAAME,MAAO1D,KAAKwD,MAAMG,QAGvF1C,EAAYqD,iBAAiBtE,KAAKwD,MAAO/F,EAAK0B,EAAG1B,EAAK2B,EAAG3B,EAAK4E,EAAG5E,EAAK6E,EAAG+B,EAASlF,EAAGkF,EAASjF,EAAG3B,EAAK4E,EAAG5E,EAAK6E,EAErH,EC1BE,MAAMiC,EACTC,SAAW,IAAIC,IACf,kBAAMC,CAAaC,GACf,IAAK,MAAMC,KAAeD,EAAc,CACpC,MAAME,QAAgB,IAAI1E,SAAQ,CAACC,EAAS0E,KACxC,MAAMtB,EAAQ,IAAIuB,MAClBvB,EAAMwB,OAAS,KACX5E,EAAQ,IAAImD,EAAQqB,EAAYnI,GAAI+G,GAAO,EAE/CA,EAAMyB,QAAU,KACZH,GAAQ,EAEZtB,EAAMW,IAAMS,EAAYjI,GAAG,IAE/BqD,KAAKwE,SAASU,IAAIN,EAAYnI,GAAIoI,EACrC,CACJ,CACD,UAAAM,CAAW1I,GACP,MAAMoI,EAAU7E,KAAKwE,SAASY,IAAI3I,GAClC,QAAgB4I,IAAZR,EACA,MAAM,IAAIS,MAAM,sBAAsB7I,MAE1C,OAAOoI,CACV,CACD,WAAAU,CAAYC,EAAKC,GACb,IAAKC,OAAOC,UAAUF,GAElB,MADA5D,QAAQD,MAAM,iBAAiB6D,KACzBH,QAEV,GAAc,IAAVG,EACA,OAAOD,EAEX,MACMI,EADiB9B,SAASC,cAAc,UACPC,WAAW,MAClD,GAAwB,OAApB4B,EAEA,MADA/D,QAAQD,MAAM,gCACR0D,QAEV,MAAMO,EAAgBL,EAAI9B,MACpBoC,EAAiBN,EAAI7B,OACrBoC,EAAcF,EAAgBJ,EAC9BO,EAAeF,EAAiBL,EACtCG,EAAgB3B,UAAUuB,EAAK,EAAG,EAAGK,EAAeC,GACpD,MAAMG,EAAeL,EAAgBM,aAAa,EAAG,EAAGL,EAAeC,GACjEK,EAAerC,SAASC,cAAc,UAC5CoC,EAAazC,MAAQqC,EACrBI,EAAaxC,OAASqC,EACtB,MAAMI,EAAgBD,EAAanC,WAAW,MAC9C,GAAsB,OAAlBoC,EAEA,MADAvE,QAAQD,MAAM,gCACR0D,QAEV,MAAMe,EAAaD,EAAcE,gBAAgBP,EAAaC,GAC9D,IAAIO,EAAkB,EACtB,IAAK,IAAInH,EAAI,EAAGA,EAAI0G,EAAgB1G,IAAK,CACrC,MAAMoH,EAAiBpH,EAAIyG,EAAgB,EACrCY,EAAeD,EAAiC,EAAhBX,EAChCa,EAAiBT,EAAaU,KAAKC,MAAMJ,EAAgBC,GAC/D,IAAK,IAAII,EAAI,EAAGA,EAAIpB,EAAOoB,IACvB,IAAK,IAAI1H,EAAI,EAAGA,EAAIuH,EAAeI,OAAQ3H,GAAK,EAC5C,IAAK,IAAI0H,EAAI,EAAGA,EAAIpB,EAAOoB,IACvBR,EAAWM,KAAKJ,KAAqBG,EAAevH,GACpDkH,EAAWM,KAAKJ,KAAqBG,EAAevH,EAAI,GACxDkH,EAAWM,KAAKJ,KAAqBG,EAAevH,EAAI,GACxDkH,EAAWM,KAAKJ,KAAqBG,EAAevH,EAAI,EAIvE,CACDiH,EAAcW,aAAaV,EAAY,EAAG,GAC1C,MAAMW,EAAYlD,SAASC,cAAc,OAEzC,OADAiD,EAAU7C,IAAMgC,EAAa/B,YACtB4C,CACV,ECzEE,MAAMC,EACTC,MACA,WAAApH,CAAYoH,GACRlH,KAAKkH,MAAQA,CAChB,CACD,mBAAAC,CAAoBC,EAAa/C,EAAUgD,GACvC,IAAK,MAAMC,KAAatH,KAAKkH,MACzB,GAAKI,EAAUC,cAAgBD,EAAUE,WAAaJ,EAAYI,UAG9DxH,KAAKyH,eAAeL,EAAYM,OAAQrD,EAAUiD,EAAUI,OAAQJ,EAAUjD,SAAUgD,GAASM,WAAa,GAC9G,OAAOL,CAIlB,CACD,cAAAG,CAAeG,EAASC,EAAWC,EAASC,EAAWJ,GACnD,GAAIC,EAAQjK,kBAAkBqF,EAAU,CACpC,MAAMgF,EAAU,IAAIhF,EAAS6E,EAAU1I,GAAKyI,EAAQ1J,cAAciB,GAAK,GAAKyI,EAAQjK,OAAOwB,EAAIwI,EAAWE,EAAUzI,GAAKwI,EAAQ1J,cAAckB,GAAK,GAAKwI,EAAQjK,OAAOyB,EAAIuI,EAAWC,EAAQjK,OAAO0E,EAAIsF,EAAWC,EAAQjK,OAAO2E,EAAIqF,GACxO,GAAIG,EAAQnK,kBAAkBqF,EAAU,CACpC,MAAMiF,EAAU,IAAIjF,EAAS+E,EAAU5I,GAAK2I,EAAQ5J,cAAciB,GAAK,GAAK2I,EAAQnK,OAAOwB,EAAIwI,EAAWI,EAAU3I,GAAK0I,EAAQ5J,cAAckB,GAAK,GAAK0I,EAAQnK,OAAOyB,EAAIuI,EAAWG,EAAQnK,OAAO0E,EAAIsF,EAAWG,EAAQnK,OAAO2E,EAAIqF,GACxO,OAAOK,EAAQ3E,mBAAmB4E,EACrC,CACJ,CACD,OAAO,CACV,ECzBE,MAAMC,EACTjJ,OACAI,OACAE,OACAC,OACA2I,SACA,WAAArI,CAAYb,EAAQI,EAAQE,EAAQC,GAChCQ,KAAKf,OAASA,EACde,KAAKX,OAASA,EACdW,KAAKT,OAASA,EACdS,KAAKR,OAASA,EACdQ,KAAKmI,SAAW,IAAIlB,EAAc,IAAIjH,KAAKX,UAAWW,KAAKT,QAC9D,CACD,aAAA2B,CAAchB,EAAIK,GACdP,KAAKT,OAAO6I,SAAQC,GAAQA,EAAKnH,cAAcX,EAAcP,KAAKmI,WACrE,CACD,MAAAhH,CAAOjB,GACHF,KAAKX,OAAO+I,SAAQC,GAAQA,EAAKlH,OAAOjB,EAAIF,KAAKmI,YACjDnI,KAAKT,OAAO6I,SAAQC,GAAQA,EAAKlH,OAAOjB,EAAIF,KAAKmI,WACpD,CACD,MAAA9G,CAAOJ,GACHjB,KAAKf,OAAOmJ,SAAQC,GAAQA,EAAKhH,OAAOJ,KAClB,IAAIjB,KAAKX,UAAWW,KAAKT,QAAQ+I,MAAK,CAACC,EAAGC,IAAMD,EAAElE,SAASjF,GAAKmJ,EAAE5K,QAAQ2E,GAAK,IAAMkG,EAAEnE,SAASjF,GAAKoJ,EAAE7K,QAAQ2E,GAAK,MAC5H8F,SAAQC,GAAQA,EAAKhH,OAAOJ,KAC1CjB,KAAKR,OAAO8I,MAAK,CAACC,EAAGC,IAAMD,EAAElE,SAASjF,EAAIoJ,EAAEnE,SAASjF,IACrDY,KAAKR,OAAO4I,SAAQC,GAAQA,EAAKhH,OAAOJ,IAC3C,EC3BE,MAAMwH,EACTtJ,EACAC,EACA,WAAAU,CAAYX,EAAGC,GACXY,KAAKb,EAAIA,EACTa,KAAKZ,EAAIA,CACZ,CACD,YAAA+D,CAAaC,GACT,OAAO,IAAIqF,EAAUzI,KAAKb,EAAIiE,EAAOjE,EAAGa,KAAKZ,EAAIgE,EAAOhE,EAC3D,ECTE,MAAMsJ,EACTvJ,EACAC,EACA,WAAAU,CAAYX,EAAGC,GACXY,KAAKb,EAAIA,EACTa,KAAKZ,EAAIA,CACZ,CACD,SAAAuJ,GACI,MAAMC,EAAYhG,KAAKC,KAAK7C,KAAKb,EAAIa,KAAKb,EAAIa,KAAKZ,EAAIY,KAAKZ,GAC5D,GAAIwJ,GAAa,EAEb,MADA/G,QAAQD,MAAM,oCAAoC5B,KAAKb,MAAMa,KAAKZ,MAC5D,IAAIkG,MAAM,oCAAoCtF,KAAKb,MAAMa,KAAKZ,MAExE,OAAO,IAAIsJ,EAAY1I,KAAKb,GAAKyJ,EAAa5I,KAAKZ,GAAKwJ,EAC3D,CACD,KAAAnD,CAAMoD,GACF,OAAO,IAAIH,EAAW1I,KAAKb,EAAI0J,EAAQ7I,KAAKZ,EAAIyJ,EACnD,EChBE,MAAMC,EACTlL,MACAiH,QACAkE,MACArL,OACAK,OACAC,MACAgL,gBACAC,aACAC,wBACAC,SAAU,EACV,WAAArJ,CAAYlC,EAAOiH,EAASkE,EAAOrL,EAAQK,EAAQC,GAC/CgC,KAAKpC,MAAQA,EACboC,KAAK6E,QAAUA,EACf7E,KAAK+I,MAAQA,EACb/I,KAAKtC,OAASA,EACdsC,KAAKjC,OAASA,EACdiC,KAAKhC,MAAQA,EACbgC,KAAKgJ,gBAAkBhJ,KAAK+I,MAAM5J,EAClCa,KAAKiJ,aAAe,EACpBjJ,KAAKkJ,wBAA0BlJ,KAAKhC,KACvC,CACD,QAAIP,GACA,OAAOuC,KAAK+I,KACf,CACD,cAAIK,GACA,OAAOpJ,KAAKmJ,OACf,CACD,IAAAE,CAAKF,GACDnJ,KAAKiJ,aAAeE,EAAUnJ,KAAKjC,OAAS,EAAI,EAChDiC,KAAKmJ,QAAUA,EACfnJ,KAAK+I,MAAM5J,EAAIa,KAAKgJ,gBAAkBhJ,KAAKiJ,aAAejJ,KAAK+I,MAAM1G,CACxE,CACD,MAAAlB,CAAOjB,GACH,MAAMoJ,EAAM,CACRC,iBAAiB,GAuBrB,OArBIvJ,KAAKjC,OAAS,IACdiC,KAAKkJ,yBAA2BhJ,EAC5BF,KAAKkJ,wBAA0B,IAC/BlJ,KAAKkJ,wBAA0BlJ,KAAKhC,MAChCgC,KAAKmJ,SACLnJ,KAAKiJ,eACDjJ,KAAKiJ,aAAe,IACpBjJ,KAAKiJ,aAAejJ,KAAKjC,OAAS,EAClCuL,EAAIC,iBAAkB,KAI1BvJ,KAAKiJ,eACDjJ,KAAKiJ,cAAgBjJ,KAAKjC,SAC1BiC,KAAKiJ,aAAe,EACpBK,EAAIC,iBAAkB,IAG9BvJ,KAAK+I,MAAM5J,EAAIa,KAAKgJ,gBAAkBhJ,KAAKiJ,aAAejJ,KAAK+I,MAAM1G,IAGtEiH,CACV,CACD,MAAAjI,CAAOJ,EAAaoD,GAChBrE,KAAK6E,QAAQxD,OAAOJ,EAAajB,KAAK+I,MAAO1E,EAASlB,aAAa,IAAIuF,GAAY1I,KAAKtC,OAAOyB,GAAIa,KAAKtC,OAAO0B,IAClH,EC/DE,MAAMoK,EACTjM,OACAkM,QACAC,cACAC,aACA,WAAA7J,CAAYvC,EAAQkM,EAASC,GAIzB,GAHA1J,KAAKzC,OAASA,EACdyC,KAAKyJ,QAAUA,EACfzJ,KAAK0J,cAAgBA,EACjBnM,EAAOuJ,OAAS,EAEhB,MADAjF,QAAQD,MAAM,4CACR,IAAI0D,MAAM,IAEpBtF,KAAK2J,aAAe3J,KAAKzC,OAAO,EACnC,CACD,QAAIE,GACA,OAAOuC,KAAK2J,aAAalM,IAC5B,CACD,UAAIE,GACA,OAAOqC,KAAKyJ,OACf,CACD,gBAAIvL,GACA,OAAO8B,KAAK0J,aACf,CACD,SAAAE,GACI,YAAwBvE,IAAjBrF,KAAKyJ,OACf,CACD,WAAAI,CAAYjM,EAAOuL,GACf,GAAIvL,IAAUoC,KAAK2J,aAAa/L,MAAO,CACnC,MAAMkM,EAAWX,IAAW,EAC5B,GAAInJ,KAAK2J,aAAaP,aAAeU,EACjC,MAEP,CACD9J,KAAK2J,aAAe3J,KAAKzC,OAAO,GAChC,MAAMgE,EAAQvB,KAAKzC,OAAOwM,MAAKlD,GAAKA,EAAEjJ,QAAUA,SAClCyH,IAAV9D,IACAvB,KAAK2J,aAAepI,GAExBvB,KAAK2J,aAAaN,KAAKF,IAAW,EACrC,CACD,MAAAhI,CAAOjB,GACH,OAAOF,KAAK2J,aAAaxI,OAAOjB,EACnC,CACD,MAAAmB,CAAOJ,EAAaoD,GAChBrE,KAAK2J,aAAatI,OAAOJ,EAAaoD,EACzC,EC1CE,MAAM2F,EACT1M,YACA2M,eACAC,QAAU,IAAIzF,IACd,WAAA3E,CAAYxC,EAAa2M,GACrBjK,KAAK1C,YAAcA,EACnB0C,KAAKiK,eAAiBA,CACzB,CACD,SAAAE,CAAU1N,GACN,MAAM2N,EAAapK,KAAK1C,YAAYyM,MAAKlD,GAAKA,EAAEpK,KAAOA,IACvD,QAAmB4I,IAAf+E,EAEA,MADAvI,QAAQD,MAAM,0BAA0BnF,MAClC,IAAI6I,MAEd,IAAIoC,EAAS1H,KAAKkK,QAAQ9E,IAAI3I,GAI9B,YAHe4I,IAAXqC,IACAA,EAAS1H,KAAKqK,aAAaD,IAExB1C,CACV,CACD,YAAA2C,CAAaD,GACT,MAAM7M,EAAS,GACf,IAAK,MAAMgE,KAAS6I,EAAW7M,OAAQ,CACnC,MAAMsH,EAAU7E,KAAKiK,eAAe9E,WAAW5D,EAAM/D,QACrD,IAAIC,EAOAC,EALAD,OADe4H,IAAf9D,EAAM9D,KACC,IAAIuF,EAASzB,EAAM9D,KAAK,GAAI8D,EAAM9D,KAAK,GAAI8D,EAAM9D,KAAK,GAAK8D,EAAM9D,KAAK,GAAK,EAAG8D,EAAM9D,KAAK,GAAK8D,EAAM9D,KAAK,GAAK,GAG9GoH,EAAQpB,UAIf/F,OADiB2H,IAAjB9D,EAAM7D,OACG,IAAI+K,EAAUlH,EAAM7D,OAAO,GAAI6D,EAAM7D,OAAO,IAG5C,IAAI+K,EAAU,EAAG,GAE9BlL,EAAO+M,KAAK,IAAIxB,EAAYvH,EAAM3D,MAAOiH,EAASpH,EAAMC,EAAQ6D,EAAMxD,QAAU,EAAGwD,EAAMvD,OAAS,KACrG,CACD,IAAIL,EAUAO,EATJ,QAA0BmH,IAAtB+E,EAAWzM,OACX,GAA0B,SAAtByM,EAAWzM,OAAmB,CAC9B,MAAMF,EAAOF,EAAO,GAAGE,KACvBE,EAAS,IAAIqF,EAAS,EAAG,EAAGvF,EAAK4E,EAAG5E,EAAK6E,EAC5C,MAEG3E,EAAS,IAAIqF,EAASoH,EAAWzM,OAAO,GAAIyM,EAAWzM,OAAO,GAAIyM,EAAWzM,OAAO,GAAKyM,EAAWzM,OAAO,GAAK,EAAGyM,EAAWzM,OAAO,GAAKyM,EAAWzM,OAAO,GAAK,GAOzK,YAHgC0H,IAA5B+E,EAAWlM,eACXA,EAAe,IAAIuK,EAAU2B,EAAWlM,aAAa,GAAIkM,EAAWlM,aAAa,KAE9E,IAAIsL,EAAOjM,EAAQI,EAAQO,EACrC,ECvDL,MAAMqM,EAAe,IACfC,EAAgB,IACf,MAAMC,EACT5G,OACA5C,YACAyJ,cACAC,MACAC,kBAAmB,EACnB,WAAA9K,CAAY+D,EAAQ5C,GAChBjB,KAAK6D,OAASA,EACd7D,KAAKiB,YAAcA,CACtB,CACD,QAAI4J,GACA,OAAO7K,KAAK2K,KACf,CACD,sBAAIG,GACA,OAAO9K,KAAK4K,gBACf,CACD,WAAMG,CAAMC,EAAW1N,EAAa0B,GAChCgB,KAAK6D,OAAOH,MAAQ6G,EACpBvK,KAAK6D,OAAOF,OAAS6G,EACrB,MAAMS,EAAc,IAAI1G,QAClB0G,EAAYvG,aAAasG,GAC/B,MAAME,EAAgB,IAAIlB,EAAc1M,EAAa2N,GAC/C3K,EAAQ,IAAI4H,EAAMlJ,EAAUC,OAAOkM,KAAI9C,GAAQrI,KAAKoL,gBAAgBF,EAAe7C,KAAQrJ,EAAUK,OAAO8L,KAAI9C,GAAQrI,KAAKoL,gBAAgBF,EAAe7C,KAAQrJ,EAAUO,OAAO4L,KAAI9C,GAAQrI,KAAKoL,gBAAgBF,EAAe7C,KAAQrJ,EAAUQ,OAAO2L,KAAI9C,GAAQrI,KAAKoL,gBAAgBF,EAAe7C,MACpTrI,KAAK2K,MAAQ,IAAItK,EAAWC,GAC5BN,KAAKqL,gBACLC,OAAOC,sBAAsBvL,KAAKwL,SAASC,KAAKzL,MACnD,CACD,eAAA0L,CAAgBC,GACZ3L,KAAK4K,iBAAmBe,EACpB3L,KAAK4K,kBACLU,OAAOC,sBAAsBvL,KAAKwL,SAASC,KAAKzL,MAEvD,CACD,aAAA4L,CAAc1L,GACVF,KAAK6L,iBACL7L,KAAK2K,MAAM3J,UAAUhB,KAAKiB,YAAaf,GACvCF,KAAK2K,MAAMrJ,mBAAmB,CAC1BR,SAAS,EACTC,SAAS,GAEhB,CACD,QAAAyK,CAASM,GACL9L,KAAK0K,cAAgB1K,KAAK0K,eAAiBoB,EAC3C,MAAM5L,EAAK4L,EAAY9L,KAAK0K,cAC5B1K,KAAK0K,cAAgBoB,EACrB9L,KAAK4L,cAAc1L,GACfF,KAAK4K,kBACLU,OAAOC,sBAAsBvL,KAAKwL,SAASC,KAAKzL,MAEvD,CACD,cAAA6L,GACI7L,KAAKiB,YAAY8K,SAAS,EAAG,EAAGxB,EAAcC,EAAe,CAAEwB,MAAO,SACtE,IAAK,IAAIC,EAAI,GAAIA,EAAI1B,EAAc0B,GAAK,GACpCjM,KAAKiB,YAAYiL,WAAWD,EAAG,EAAG,GAAI1B,EAAc,CAAEyB,MAAO,UAEjE,IAAK,IAAIC,EAAI,GAAIA,EAAI1B,EAAc0B,GAAK,GACpCjM,KAAKiB,YAAYiL,WAAWD,EAAG,EAAG,GAAI1B,EAAc,CAAEyB,MAAO,SAEjE,IAAK,IAAIG,EAAI,GAAIA,EAAI3B,EAAe2B,GAAK,GACrCnM,KAAKiB,YAAYiL,WAAW,EAAGC,EAAG3B,EAAe,GAAI,CAAEwB,MAAO,UAElE,IAAK,IAAIG,EAAI,GAAIA,EAAI3B,EAAe2B,GAAK,GACrCnM,KAAKiB,YAAYiL,WAAW,EAAGC,EAAG3B,EAAe,GAAI,CAAEwB,MAAO,QAErE,CACD,aAAAX,GACIC,OAAOc,iBAAiB,WAAYC,IAChC,OAAQA,EAAMC,KAAKC,eACf,IAAK,UACDvM,KAAK6K,KAAKvJ,mBAAmB,CAAEb,IAAI,IACnC4L,EAAMG,iBACN,MACJ,IAAK,YACDxM,KAAK6K,KAAKvJ,mBAAmB,CAAEZ,MAAM,IACrC2L,EAAMG,iBACN,MACJ,IAAK,YACDxM,KAAK6K,KAAKvJ,mBAAmB,CAAEX,MAAM,IACrC0L,EAAMG,iBACN,MACJ,IAAK,aACDxM,KAAK6K,KAAKvJ,mBAAmB,CAAEV,OAAO,IACtCyL,EAAMG,iBACN,MACJ,IAAK,OACDxM,KAAK6K,KAAKvJ,mBAAmB,CAAET,SAAS,IACxCwL,EAAMG,iBAEb,IAELlB,OAAOc,iBAAiB,SAAUC,IAC9B,OAAQA,EAAMC,KAAKC,eACf,IAAK,UACDvM,KAAK6K,KAAKvJ,mBAAmB,CAAEb,IAAI,IACnC4L,EAAMG,iBACN,MACJ,IAAK,YACDxM,KAAK6K,KAAKvJ,mBAAmB,CAAEZ,MAAM,IACrC2L,EAAMG,iBACN,MACJ,IAAK,YACDxM,KAAK6K,KAAKvJ,mBAAmB,CAAEX,MAAM,IACrC0L,EAAMG,iBACN,MACJ,IAAK,aACDxM,KAAK6K,KAAKvJ,mBAAmB,CAAEV,OAAO,IACtCyL,EAAMG,iBACN,MACJ,IAAK,OACDxM,KAAK6K,KAAKvJ,mBAAmB,CAAET,SAAS,IACxCwL,EAAMG,iBACN,MACJ,IAAK,OACDxM,KAAK6K,KAAKvJ,mBAAmB,CAAER,SAAS,IACxCuL,EAAMG,iBACN,MACJ,IAAK,OACDxM,KAAK6K,KAAKvJ,mBAAmB,CAAEP,SAAS,IACxCsL,EAAMG,iBAEb,GAER,EC9HE,MAAMC,EACTC,UACAC,QACAC,UACA,WAAA9M,CAAYC,GACRC,KAAK0M,UCNFG,KAAK,GAAmB,MAAhBjK,KAAKkK,UDOhB9M,KAAK2M,QAAU5M,EAAO2H,OACtB1H,KAAK4M,UAAY,IAAInE,EAAU1I,EAAOZ,EAAGY,EAAOX,EACnD,CACD,UAAAmI,GACI,OAAOvH,KAAK2M,QAAQ/C,WACvB,CACD,YAAIpC,GACA,OAAOxH,KAAK0M,SACf,CACD,UAAIhF,GACA,OAAO1H,KAAK2M,OACf,CACD,YAAItI,GACA,OAAOrE,KAAK4M,SACf,CACD,QAAInP,GACA,OAAOuC,KAAK2M,QAAQlP,IACvB,CACD,UAAIE,GACA,OAAOqC,KAAK2M,QAAQhP,MACvB,CACD,aAAAuD,CAAcX,EAAc4H,GAAa,CACzC,MAAAhH,CAAOjB,EAAIiI,GACiBnI,KAAK2M,QAAQxL,OAAOjB,GACxBqJ,iBAChBvJ,KAAK+M,uBAEZ,CACD,qBAAAA,GAA2B,CAC3B,MAAA1L,CAAOJ,GACHjB,KAAK2M,QAAQtL,OAAOJ,EAAajB,KAAK4M,UACzC,EErCE,MAAMI,UAAkBP,EAC3BQ,QAAS,EACT,WAAAnN,CAAYC,GACRmN,MAAMnN,GACNC,KAAK2M,QAAQ9C,YAAYzM,EAAiBS,OAC7C,CACD,IAAAsP,GACQnN,KAAKiN,QACLjN,KAAK2M,QAAQ9C,YAAYzM,EAAiBU,SAAS,GACnDkC,KAAKiN,QAAS,IAGdjN,KAAK2M,QAAQ9C,YAAYzM,EAAiBU,SAC1CkC,KAAKiN,QAAS,EAErB,CACD,MAAA9L,CAAOjB,EAAIiI,GACP+E,MAAM/L,OAAOjB,EAAIiI,EACpB,CACD,qBAAA4E,GACI/M,KAAK2M,QAAQ9C,YAAY7J,KAAKiN,OAAS7P,EAAiBa,KAAOb,EAAiBS,OACnF,ECvBE,IAAIuP,GACX,SAAWA,GACPA,EAAUA,EAAc,GAAI,GAAK,KACjCA,EAAUA,EAAgB,KAAI,GAAK,OACnCA,EAAUA,EAAgB,KAAI,GAAK,OACnCA,EAAUA,EAAiB,MAAI,GAAK,OACvC,CALD,CAKGA,IAAcA,EAAY,CAAA,ICCtB,MAAMC,UAAiBZ,EAC1Ba,iBACAC,iBACAC,iBACAjM,MACAkM,cACAC,MARkB,GASlBC,WACA,WAAA7N,CAAYC,GACRmN,MAAMnN,GACNC,KAAKuB,MAAQlE,EAAgBgB,UAC7B2B,KAAKyN,cAAgBzN,KAAKuB,MAC1BvB,KAAKsN,iBAAmB,EACxBtN,KAAKuN,iBAAmB,EACxBvN,KAAK2N,YAAa,CACrB,CACD,aAAAzM,CAAcX,EAAc4H,GAExB,GADA+E,MAAMhM,cAAcX,EAAc4H,IAC9BnI,KAAK2N,WAAT,CAmCA,GAhCA3N,KAAKuB,MAAQlE,EAAgBgB,UAC7B2B,KAAKwN,sBAAmBnI,EACxBrF,KAAKsN,iBAAmB,EACpB/M,EAAaI,MACbX,KAAKsN,kBAAoB,EACzBtN,KAAKuB,MAAQlE,EAAgBqB,YACzBsB,KAAKwN,mBAAqBJ,EAAUQ,IAAM5N,KAAKwN,mBAAqBJ,EAAUS,OAC9E7N,KAAKwN,iBAAmBJ,EAAUU,OAGjCvN,EAAaK,QAClBZ,KAAKsN,iBAAmB,EACxBtN,KAAKuB,MAAQlE,EAAgBsB,aACzBqB,KAAKwN,mBAAqBJ,EAAUQ,IAAM5N,KAAKwN,mBAAqBJ,EAAUS,OAC9E7N,KAAKwN,iBAAmBJ,EAAUW,QAG1C/N,KAAKuN,iBAAmB,EACpBhN,EAAaE,IACbT,KAAKuN,kBAAoB,EACzBvN,KAAKuB,MAAQlE,EAAgBmB,UACzBwB,KAAKwN,mBAAqBJ,EAAUU,MAAQ9N,KAAKwN,mBAAqBJ,EAAUW,QAChF/N,KAAKwN,iBAAmBJ,EAAUQ,KAGjCrN,EAAaG,OAClBV,KAAKuN,iBAAmB,EACxBvN,KAAKuB,MAAQlE,EAAgBoB,YACzBuB,KAAKwN,mBAAqBJ,EAAUU,MAAQ9N,KAAKwN,mBAAqBJ,EAAUW,QAChF/N,KAAKwN,iBAAmBJ,EAAUS,OAGtCtN,EAAaQ,QAAS,CAEtB,OADAf,KAAKyN,cAAgBzN,KAAKuB,MAClBvB,KAAKwN,kBACT,KAAKJ,EAAUQ,GACX5N,KAAKuB,MAAQlE,EAAgBuB,QAC7B,MACJ,KAAKwO,EAAUS,KACX7N,KAAKuB,MAAQlE,EAAgBwB,UAC7B,MACJ,KAAKuO,EAAUU,KACX9N,KAAKuB,MAAQlE,EAAgByB,UAGrCkB,KAAK2N,YAAa,CACrB,CAGD,GAFA3N,KAAK2M,QAAQ9C,YAAY7J,KAAKuB,OAC9BvB,KAAK0N,MAAQnN,EAAaM,QAtEZ,GADA,GAwEVN,EAAaO,QAAS,CACtB,MAAMkN,EAAc7F,EAAShB,oBAAoBnH,KAAMA,KAAK4M,UAAW,CAAEjF,UAAW,IACpF,QAAoBtC,IAAhB2I,GAA6BA,aAAuBhB,EAAW,CACjDgB,EACRb,MACT,CACJ,CAxDA,CAyDJ,CACD,MAAAhM,CAAOjB,EAAIiI,GAEP,OADA+E,MAAM/L,OAAOjB,EAAIiI,GACTnI,KAAKuB,OACT,KAAKlE,EAAgBmB,UACrB,KAAKnB,EAAgBoB,YACrB,KAAKpB,EAAgBqB,YACrB,KAAKrB,EAAgBsB,aACjBqB,KAAKiO,WAAW/N,EAAI,IAAIwI,EAAW1I,KAAKsN,iBAAkB,GAAInF,GAC9DnI,KAAKiO,WAAW/N,EAAI,IAAIwI,EAAW,EAAG1I,KAAKuN,kBAAmBpF,GAGzE,CACD,qBAAA4E,GACQ/M,KAAK2N,aACL3N,KAAK2M,QAAQ9C,YAAY7J,KAAKyN,eAC9BzN,KAAKuB,MAAQvB,KAAKyN,cAClBzN,KAAK2N,YAAa,EAEzB,CACD,MAAAtM,CAAOJ,GACHiM,MAAM7L,OAAOJ,EAChB,CACD,UAAAgN,CAAW/N,EAAIgO,EAAW/F,GACtB,MAAMgG,EAAgBD,EAAUzI,MAAMzF,KAAK0N,MAAQxN,GAC7CkO,EAAepO,KAAK4M,UAAUzJ,aAAagL,GAC7ChG,EAAShB,oBAAoBnH,KAAMoO,KAGvCpO,KAAK4M,UAAY5M,KAAK4M,UAAUzJ,aAAagL,GAChD,EC5GL,MAAME,EAAYvK,SAASwK,eAAe,gBAAajJ,EACvD,QAAkBA,IAAdgJ,EAEA,MADAxM,QAAQD,MAAM,iBACR,IAAI0D,MAAM,iBAEpB,MAAMiJ,EAAUF,EAAUrK,WAAW,YAASqB,EAC9C,QAAgBA,IAAZkJ,EAEA,MADA1M,QAAQD,MAAM,wBACR,IAAI0D,MAAM,wBAEpB,MAAMrE,EAAc,IChBb,MACHsN,QACA,WAAAzO,CAAYyO,GACRvO,KAAKuO,QAAUA,CAClB,CACD,UAAArC,CAAW/M,EAAGC,EAAGiD,EAAGC,EAAG+E,GACnBrH,KAAKuO,QAAQC,YACUnJ,IAAnBgC,GAAS3D,QACT1D,KAAKuO,QAAQE,UAAYpH,EAAQ3D,YAEd2B,IAAnBgC,GAAS2E,QACThM,KAAKuO,QAAQG,YAAcrH,EAAQ2E,OAEvChM,KAAKuO,QAAQrC,WAAW/M,EAAGC,EAAGiD,EAAGC,GACjCtC,KAAKuO,QAAQI,SAChB,CACD,QAAA5C,CAAS5M,EAAGC,EAAGiD,EAAGC,EAAG+E,GACjBrH,KAAKuO,QAAQC,YACUnJ,IAAnBgC,GAAS2E,QACThM,KAAKuO,QAAQK,UAAYvH,EAAQ2E,OAErChM,KAAKuO,QAAQxC,SAAS5M,EAAGC,EAAGiD,EAAGC,GAC/BtC,KAAKuO,QAAQI,SAChB,CACD,SAAA1K,CAAUT,EAAOrE,EAAGC,EAAGiD,EAAGC,GACtBtC,KAAKuO,QAAQC,OACbxO,KAAKuO,QAAQtK,UAAUT,EAAOrE,EAAGC,EAAGiD,EAAGC,GACvCtC,KAAKuO,QAAQI,SAChB,CACD,gBAAArK,CAAiBd,EAAOrE,EAAGC,EAAGiD,EAAGC,EAAGuM,EAAIC,EAAIC,EAAIC,GAC5ChP,KAAKuO,QAAQC,OACbxO,KAAKuO,QAAQtK,UAAUT,EAAOrE,EAAGC,EAAGiD,EAAGC,EAAGuM,EAAIC,EAAIC,EAAIC,GACtDhP,KAAKuO,QAAQI,SAChB,CACD,SAAAlN,CAAUwN,EAAM9P,EAAGC,EAAGiI,GAElB,GADArH,KAAKuO,QAAQC,YACoBnJ,IAA7BgC,GAAS3F,gBACT,OAAQ2F,EAAQ3F,iBACZ,IAAK,OACD1B,KAAKuO,QAAQW,UAAY,OACzB,MACJ,IAAK,SACDlP,KAAKuO,QAAQW,UAAY,SACzB,MACJ,IAAK,QACDlP,KAAKuO,QAAQW,UAAY,QAIrC,QAA+B7J,IAA3BgC,GAAS1F,cACT,OAAQ0F,EAAQ1F,eACZ,IAAK,MACD3B,KAAKuO,QAAQY,aAAe,MAC5B,MACJ,IAAK,SACDnP,KAAKuO,QAAQY,aAAe,SAC5B,MACJ,IAAK,SACDnP,KAAKuO,QAAQY,aAAe,SAIxCnP,KAAKuO,QAAQa,SAASH,EAAM9P,EAAGC,GAC/BY,KAAKuO,QAAQI,SAChB,GDhDqCJ,GACpCc,EAAM,IEZL,cAAkB5E,EACrB,eAAAW,CAAgBF,EAAeoE,GAC3B,MAAM5H,EAASwD,EAAcf,UAAUmF,EAASpQ,UAChD,QAAsBmG,IAAlBiK,EAAShQ,KACT,OAAQgQ,EAAShQ,MACb,KAAKP,EAAkB/B,MACnB,OAAO,IAAIgQ,EAAU,CAAEtF,SAAQvI,EAAGmQ,EAASnQ,EAAGC,EAAGkQ,EAASlQ,IAC9D,KAAKL,EAAkB7B,KACnB,OAAO,IAAImQ,EAAS,CAAE3F,SAAQvI,EAAGmQ,EAASnQ,EAAGC,EAAGkQ,EAASlQ,IAC7D,QAEI,MADAyC,QAAQD,MAAM,wBAAwB0N,EAAShQ,qBAAqBgQ,EAASnQ,KAAKmQ,EAASlQ,MACrF,IAAIkG,MAGtB,OAAO,IAAImH,EAAY,CAAE/E,SAAQvI,EAAGmQ,EAASnQ,EAAGC,EAAGkQ,EAASlQ,GAC/D,GFHeiP,EAAWpN,GACzBsO,EAAK,IGlBJ,MACHF,IACAG,WAAa1L,SAASwK,eAAe,eACrCmB,YAAc3L,SAASwK,eAAe,gBACtCoB,WAAa5L,SAASwK,eAAe,eACrC,WAAAxO,CAAYuP,GACRrP,KAAKqP,IAAMA,EACXrP,KAAKmB,QACR,CACD,MAAAA,GACInB,KAAKwP,WAAWG,MAAMC,QAAU5P,KAAKqP,IAAIvE,mBAAqB,QAAU,OACxE9K,KAAKyP,YAAYE,MAAMC,QAAU5P,KAAKqP,IAAIvE,mBAAqB,OAAS,OAC3E,GHMauE,GAClBE,EAAGC,WAAWpD,iBAAiB,SAAUC,IACrCgD,EAAI3D,iBAAgB,GACpB6D,EAAGpO,QAAQ,IAEfoO,EAAGE,YAAYrD,iBAAiB,SAAUC,IACtCgD,EAAI3D,iBAAgB,GACpB6D,EAAGpO,QAAQ,IAEfoO,EAAGG,WAAWtD,iBAAiB,SAAUC,IACrCgD,EAAIzD,cAAc,IAClB2D,EAAGpO,QAAQ,UAETkO,EAAItE,MAAMvO,EAAcc,EAAa0B"}