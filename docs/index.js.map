{"version":3,"file":"index.js","sources":["../dist/game/textures.data.js","../dist/game/sprites.data.js","../dist/game/scene.data.js","../dist/engine/utils/frame-rate-iterator.js","../dist/engine/engine-game.js","../dist/engine/geom/intersections.js","../dist/engine/geom/geom-rect.js","../dist/engine/texture/texture.js","../dist/engine/texture/texture-manager.js","../dist/engine/scene/scene-collider.js","../dist/engine/scene/scene.js","../dist/engine/geom/geom-point.js","../dist/engine/geom/geom-vector.js","../dist/engine/sprite/sprite-state.js","../dist/engine/sprite/sprite.js","../dist/engine/sprite/sprite-frame.js","../dist/engine/sprite/sprite-manager.js","../dist/engine/engine-app.js","../dist/engine/scene/generic.item.js","../dist/engine/utils/random-id.js","../dist/game/chest.item.js","../dist/engine/direction.js","../dist/game/hero.item.js","../dist/index.js","../dist/canvas-draw-context.js","../dist/game/app.js","../dist/ui.js"],"sourcesContent":["export var TextureId;\n(function (TextureId) {\n    TextureId[\"Debug01\"] = \"debug01\";\n    TextureId[\"Grass0\"] = \"grass0\";\n    TextureId[\"Grass1\"] = \"grass1\";\n    TextureId[\"Plant\"] = \"plant\";\n    TextureId[\"Bush\"] = \"bush\";\n    TextureId[\"Chest\"] = \"chest\";\n    TextureId[\"Book\"] = \"book\";\n    TextureId[\"Hero\"] = \"hero\";\n    TextureId[\"Character\"] = \"character\";\n    TextureId[\"Objects\"] = \"objects\";\n    TextureId[\"Overworld\"] = \"overworld\";\n})(TextureId || (TextureId = {}));\nconst assetsDir = 'assets';\nexport const texturesData = [\n    { id: TextureId.Character, url: `${assetsDir}/character.png` },\n    { id: TextureId.Objects, url: `${assetsDir}/objects.png` },\n    { id: TextureId.Overworld, url: `${assetsDir}/overworld.png` },\n];\n//# sourceMappingURL=textures.data.js.map","import { TextureId } from './textures.data.js';\nexport var SpriteId;\n(function (SpriteId) {\n    SpriteId[\"Debug01\"] = \"debug01\";\n    SpriteId[\"Grass0\"] = \"grass0\";\n    SpriteId[\"Grass1\"] = \"grass1\";\n    SpriteId[\"Bush\"] = \"bush\";\n    SpriteId[\"Chest\"] = \"chest\";\n    SpriteId[\"Book\"] = \"book\";\n    SpriteId[\"Plant\"] = \"plant\";\n    SpriteId[\"PlantOverlay\"] = \"plant-overlay\";\n    SpriteId[\"Hero\"] = \"hero\";\n})(SpriteId || (SpriteId = {}));\nexport var SpriteChestState;\n(function (SpriteChestState) {\n    SpriteChestState[\"Closed\"] = \"closed\";\n    SpriteChestState[\"Opening\"] = \"opening\";\n    SpriteChestState[\"Open\"] = \"open\";\n})(SpriteChestState || (SpriteChestState = {}));\nexport var SpriteHeroState;\n(function (SpriteHeroState) {\n    SpriteHeroState[\"StillUp\"] = \"still-up\";\n    SpriteHeroState[\"StillDown\"] = \"still-down\";\n    SpriteHeroState[\"StillLeft\"] = \"still-left\";\n    SpriteHeroState[\"StillRight\"] = \"still-right\";\n    SpriteHeroState[\"WalkingUp\"] = \"walking-up\";\n    SpriteHeroState[\"WalkingDown\"] = \"walking-down\";\n    SpriteHeroState[\"WalkingLeft\"] = \"walking-left\";\n    SpriteHeroState[\"WalkingRight\"] = \"walking-right\";\n    SpriteHeroState[\"SwordUp\"] = \"sword-up\";\n    SpriteHeroState[\"SwordDown\"] = \"sword-down\";\n    SpriteHeroState[\"SwordLeft\"] = \"sword-left\";\n    SpriteHeroState[\"SwordRight\"] = \"sword-right\";\n})(SpriteHeroState || (SpriteHeroState = {}));\nexport const spritesData = [\n    { id: SpriteId.Grass0, states: [{ textureId: TextureId.Overworld, frames: [{ bbox: [0, 0, 47, 47] }] }] },\n    { id: SpriteId.Grass1, states: [{ textureId: TextureId.Overworld, frames: [{ bbox: [816, 1392, 863, 1439] }] }] },\n    {\n        id: SpriteId.Plant,\n        states: [\n            {\n                textureId: TextureId.Overworld,\n                frames: [{ bbox: [1536, 105, 1573, 138], anchor: [0, -51] }],\n            },\n        ],\n        hitBox: [9, 54, 38, 77],\n    },\n    {\n        id: SpriteId.PlantOverlay,\n        states: [{ textureId: TextureId.Overworld, frames: [{ bbox: [1536, 54, 1573, 104] }] }],\n    },\n    {\n        id: SpriteId.Hero,\n        states: [\n            { label: SpriteHeroState.StillUp, textureId: TextureId.Character, frames: [{ bbox: [0, 207, 44, 275] }] },\n            { label: SpriteHeroState.StillDown, textureId: TextureId.Character, frames: [{ bbox: [3, 18, 47, 83] }] },\n            { label: SpriteHeroState.StillLeft, textureId: TextureId.Character, frames: [{ bbox: [3, 306, 41, 371] }] },\n            { label: SpriteHeroState.StillRight, textureId: TextureId.Character, frames: [{ bbox: [6, 114, 44, 179] }] },\n            {\n                label: SpriteHeroState.WalkingUp,\n                textureId: TextureId.Character,\n                frames: [\n                    { bbox: [3, 18, 47, 83] },\n                    { bbox: [51, 18, 95, 83] },\n                    { bbox: [99, 18, 143, 83] },\n                    { bbox: [147, 18, 191, 83] },\n                ],\n            },\n            {\n                label: SpriteHeroState.WalkingDown,\n                textureId: TextureId.Character,\n                frames: [\n                    { bbox: [3, 18, 47, 83] },\n                    { bbox: [51, 18, 95, 83] },\n                    { bbox: [99, 18, 143, 83] },\n                    { bbox: [147, 18, 191, 83] },\n                ],\n            },\n            {\n                label: SpriteHeroState.WalkingLeft,\n                textureId: TextureId.Character,\n                frames: [\n                    { bbox: [3, 18, 47, 83] },\n                    { bbox: [51, 18, 95, 83] },\n                    { bbox: [99, 18, 143, 83] },\n                    { bbox: [147, 18, 191, 83] },\n                ],\n            },\n            {\n                label: SpriteHeroState.WalkingRight,\n                textureId: TextureId.Character,\n                frames: [\n                    { bbox: [3, 18, 47, 83] },\n                    { bbox: [51, 18, 95, 83] },\n                    { bbox: [99, 18, 143, 83] },\n                    { bbox: [147, 18, 191, 83] },\n                ],\n            },\n        ],\n        hitBox: [3, 32, 38, 59],\n    },\n];\n//# sourceMappingURL=sprites.data.js.map","import { SpriteId } from './sprites.data.js';\nexport var SceneDataItemType;\n(function (SceneDataItemType) {\n    SceneDataItemType[\"Chest\"] = \"chest\";\n    SceneDataItemType[\"Hero\"] = \"hero\";\n})(SceneDataItemType || (SceneDataItemType = {}));\nexport const sceneData = {\n    layer0: [\n        { spriteId: SpriteId.Grass0, x: 150, y: 250 },\n        { spriteId: SpriteId.Grass1, x: 198, y: 250 },\n    ],\n    layer1: [\n        { spriteId: SpriteId.Plant, x: 150, y: 100 },\n        { spriteId: SpriteId.Plant, x: 195, y: 100 },\n    ],\n    layer2: [{ spriteId: SpriteId.Hero, type: SceneDataItemType.Hero, x: 50, y: 100 }],\n    layer3: [\n        { spriteId: SpriteId.PlantOverlay, x: 150, y: 100 },\n        { spriteId: SpriteId.PlantOverlay, x: 195, y: 100 },\n    ],\n};\n//# sourceMappingURL=scene.data.js.map","export class FrameRateIterator {\n    targetFps;\n    timer = 0;\n    frameCountInOneSecond = 0;\n    fps = 0;\n    constructor(params) {\n        this.targetFps = params.targetFps;\n    }\n    shouldRender(deltaTime) {\n        this.timer += deltaTime;\n        if (this.timer > 1000) {\n            this.fps = this.frameCountInOneSecond;\n            this.frameCountInOneSecond = 0;\n            this.timer = 0;\n        }\n        this.frameCountInOneSecond++;\n        return Promise.resolve(true);\n    }\n}\n//# sourceMappingURL=frame-rate-iterator.js.map","import { FrameRateIterator } from './utils/frame-rate-iterator.js';\nconst TARGET_FPS = 60;\nexport class EngineGame {\n    scene;\n    controlState;\n    frameRateIterator;\n    constructor(scene) {\n        this.scene = scene;\n        this.controlState = {\n            up: false,\n            down: false,\n            left: false,\n            right: false,\n            control: false,\n            action1: false,\n            action2: false,\n        };\n        this.frameRateIterator = new FrameRateIterator({ targetFps: TARGET_FPS });\n    }\n    nextFrame(drawContext, deltaTime) {\n        this.scene.processInputs(deltaTime, this.controlState);\n        this.scene.update(deltaTime);\n        this.frameRateIterator.shouldRender(deltaTime).then(shouldRender => {\n            if (shouldRender) {\n                this.render(drawContext);\n            }\n        });\n    }\n    updateControlState(state) {\n        this.controlState.up = state.up ?? this.controlState.up;\n        this.controlState.down = state.down ?? this.controlState.down;\n        this.controlState.left = state.left ?? this.controlState.left;\n        this.controlState.right = state.right ?? this.controlState.right;\n        this.controlState.control = state.control ?? this.controlState.control;\n        this.controlState.action1 = state.action1 ?? this.controlState.action1;\n        this.controlState.action2 = state.action2 ?? this.controlState.action2;\n    }\n    render(drawContext) {\n        try {\n            this.scene.render(drawContext);\n            const fpsString = `FPS: ${this.frameRateIterator.fps}`;\n            drawContext.writeText(fpsString, 5, 5, { horizontalAlign: 'left', verticalAlign: 'top' });\n        }\n        catch (error) {\n            console.error(error);\n        }\n    }\n}\n//# sourceMappingURL=engine-game.js.map","export var Intersections;\n(function (Intersections) {\n    function rectIntersectsWithRect(r1, r2) {\n        if (r1.x > r2.x + r2.w) {\n            return false;\n        }\n        if (r1.x + r1.w < r2.x) {\n            return false;\n        }\n        if (r1.y > r2.y + r2.h) {\n            return false;\n        }\n        if (r1.y + r1.h < r2.y) {\n            return false;\n        }\n        return true;\n    }\n    Intersections.rectIntersectsWithRect = rectIntersectsWithRect;\n    function rectIntersectsWithCircle(rect, circle) {\n        return false;\n    }\n    Intersections.rectIntersectsWithCircle = rectIntersectsWithCircle;\n    function circleIntersectsWithCircle(c1, c2) {\n        const diffX = c2.x - c1.x;\n        const diffY = c2.y - c1.y;\n        return Math.sqrt(diffX * diffX + diffY * diffY) < c1.r + c2.r;\n    }\n    Intersections.circleIntersectsWithCircle = circleIntersectsWithCircle;\n    function circleIntersectsWithRect(circle, rect) {\n        return rectIntersectsWithCircle(rect, circle);\n    }\n    Intersections.circleIntersectsWithRect = circleIntersectsWithRect;\n})(Intersections || (Intersections = {}));\n//# sourceMappingURL=intersections.js.map","import { Intersections } from './intersections.js';\nexport class GeomRect {\n    x;\n    y;\n    w;\n    h;\n    constructor(x, y, w, h) {\n        this.x = x;\n        this.y = y;\n        this.w = w;\n        this.h = h;\n    }\n    equals(other) {\n        return this.x === other.x && this.y === other.y && this.w === other.w && this.h === other.h;\n    }\n    moveByVector(vector) {\n        return new GeomRect(this.x + vector.x, this.y + vector.y, this.w, this.h);\n    }\n    intersectsWithRect(rect) {\n        return Intersections.rectIntersectsWithRect(this, rect);\n    }\n    intersectsWithCircle(circle) {\n        return Intersections.rectIntersectsWithCircle(this, circle);\n    }\n}\n//# sourceMappingURL=geom-rect.js.map","import { GeomRect } from '../geom/geom-rect.js';\nexport class Texture {\n    id;\n    image;\n    imageBBox;\n    constructor(id, image) {\n        this.id = id;\n        this.image = image;\n        this.imageBBox = new GeomRect(0, 0, image.width, image.height);\n    }\n    getCroppedImage(bbox) {\n        const canvas = document.createElement('canvas');\n        canvas.width = bbox.w;\n        canvas.height = bbox.h;\n        const context = canvas.getContext('2d');\n        context.drawImage(this.image, -bbox.x, -bbox.y);\n        const croppedImage = document.createElement('img');\n        croppedImage.src = canvas.toDataURL();\n        return croppedImage;\n    }\n    render(drawContext, bbox, position) {\n        if (bbox.equals(this.imageBBox)) {\n            drawContext.drawImage(this.image, position.x, position.y, this.image.width, this.image.height);\n        }\n        else {\n            drawContext.drawImageCropped(this.image, bbox.x, bbox.y, bbox.w, bbox.h, position.x, position.y, bbox.w, bbox.h);\n        }\n    }\n}\n//# sourceMappingURL=texture.js.map","import { Texture } from './texture.js';\nexport class TextureManager {\n    textures = new Map();\n    async loadTextures(texturesData) {\n        for (const textureData of texturesData) {\n            const texture = await new Promise((resolve, reject) => {\n                let image = new Image();\n                image.onload = () => {\n                    resolve(new Texture(textureData.id, image));\n                };\n                image.onerror = () => {\n                    reject();\n                };\n                image.src = textureData.url;\n            });\n            this.textures.set(textureData.id, texture);\n        }\n    }\n    getTexture(id) {\n        const texture = this.textures.get(id);\n        if (texture === undefined) {\n            throw new Error(`No texture for id '${id}'`);\n        }\n        return texture;\n    }\n    scaleImage(img, scale) {\n        if (!Number.isInteger(scale)) {\n            console.error(`Invalid scale ${scale}`);\n            throw Error();\n        }\n        if (scale === 1) {\n            return img;\n        }\n        const originalCanvas = document.createElement('canvas');\n        const originalContext = originalCanvas.getContext('2d');\n        if (originalContext === null) {\n            console.error('Error creating memory canvas');\n            throw Error();\n        }\n        const originalWidth = img.width;\n        const originalHeight = img.height;\n        const targetWidth = originalWidth * scale;\n        const targetHeight = originalHeight * scale;\n        originalContext.drawImage(img, 0, 0, originalWidth, originalHeight);\n        const originalData = originalContext.getImageData(0, 0, originalWidth, originalHeight);\n        const targetCanvas = document.createElement('canvas');\n        targetCanvas.width = targetWidth;\n        targetCanvas.height = targetHeight;\n        const targetContext = targetCanvas.getContext('2d');\n        if (targetContext === null) {\n            console.error('Error creating memory canvas');\n            throw Error();\n        }\n        const targetData = targetContext.createImageData(targetWidth, targetHeight);\n        let targetDataIndex = 0;\n        for (let y = 0; y < originalHeight; y++) {\n            const lineStartIndex = y * originalWidth * 4;\n            const lineEndIndex = lineStartIndex + originalWidth * 4;\n            const linePixelsRGBA = originalData.data.slice(lineStartIndex, lineEndIndex);\n            for (let s = 0; s < scale; s++) {\n                for (let x = 0; x < linePixelsRGBA.length; x += 4) {\n                    for (let s = 0; s < scale; s++) {\n                        targetData.data[targetDataIndex++] = linePixelsRGBA[x];\n                        targetData.data[targetDataIndex++] = linePixelsRGBA[x + 1];\n                        targetData.data[targetDataIndex++] = linePixelsRGBA[x + 2];\n                        targetData.data[targetDataIndex++] = linePixelsRGBA[x + 3];\n                    }\n                }\n            }\n        }\n        targetContext.putImageData(targetData, 0, 0);\n        const targetImg = document.createElement('img');\n        targetImg.src = targetCanvas.toDataURL();\n        return targetImg;\n    }\n}\n//# sourceMappingURL=texture-manager.js.map","import { GeomRect } from '../geom/geom-rect.js';\nexport class SceneCollider {\n    items;\n    constructor(items) {\n        this.items = items;\n    }\n    anyItemCollidesWith(checkedItem, position, options) {\n        for (const sceneItem of this.items) {\n            if (!sceneItem.canCollide() || sceneItem.uniqueId === checkedItem.uniqueId) {\n                continue;\n            }\n            if (this.checkCollision(checkedItem.sprite, position, sceneItem.sprite, sceneItem.position, options?.tolerance ?? 0)) {\n                return sceneItem;\n            }\n        }\n        return undefined;\n    }\n    checkCollision(sprite1, position1, sprite2, position2, tolerance) {\n        if (sprite1.hitBox instanceof GeomRect) {\n            const hitBox1 = new GeomRect(position1.x - (sprite1.hitBoxAnchor?.x ?? 0) + sprite1.hitBox.x - tolerance, position1.y - (sprite1.hitBoxAnchor?.y ?? 0) + sprite1.hitBox.y - tolerance, sprite1.hitBox.w + tolerance, sprite1.hitBox.h + tolerance);\n            if (sprite2.hitBox instanceof GeomRect) {\n                const hitBox2 = new GeomRect(position2.x - (sprite2.hitBoxAnchor?.x ?? 0) + sprite2.hitBox.x - tolerance, position2.y - (sprite2.hitBoxAnchor?.y ?? 0) + sprite2.hitBox.y - tolerance, sprite2.hitBox.w + tolerance, sprite2.hitBox.h + tolerance);\n                return hitBox1.intersectsWithRect(hitBox2);\n            }\n        }\n        return false;\n    }\n}\n//# sourceMappingURL=scene-collider.js.map","import { SceneCollider } from './scene-collider.js';\nexport class Scene {\n    layer0;\n    layer1;\n    layer2;\n    layer3;\n    collider;\n    constructor(layer0, layer1, layer2, layer3) {\n        this.layer0 = layer0;\n        this.layer1 = layer1;\n        this.layer2 = layer2;\n        this.layer3 = layer3;\n        this.collider = new SceneCollider([...this.layer1, ...this.layer2]);\n    }\n    processInputs(deltaTime, controlState) {\n        this.layer2.forEach(item => item.processInputs(controlState, this.collider));\n    }\n    update(deltaTime) {\n        this.layer1.forEach(item => item.update(deltaTime, this.collider));\n        this.layer2.forEach(item => item.update(deltaTime, this.collider));\n    }\n    render(drawContext) {\n        this.layer0.forEach(item => item.render(drawContext));\n        const layers12Items = [...this.layer1, ...this.layer2].sort((a, b) => a.position.y + (a.hitBox?.h ?? 0) - (b.position.y + (b.hitBox?.h ?? 0)));\n        layers12Items.forEach(item => item.render(drawContext));\n        this.layer3.sort((a, b) => a.position.y - b.position.y);\n        this.layer3.forEach(item => item.render(drawContext));\n    }\n}\n//# sourceMappingURL=scene.js.map","export class GeomPoint {\n    x;\n    y;\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    moveByVector(vector) {\n        return new GeomPoint(this.x + vector.x, this.y + vector.y);\n    }\n}\n//# sourceMappingURL=geom-point.js.map","export class GeomVector {\n    x;\n    y;\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    normalize() {\n        const magnitude = Math.sqrt(this.x * this.x + this.y * this.y);\n        if (magnitude <= 0) {\n            console.error(`Vector has an invalid magnitude (${this.x}, ${this.y})`);\n            throw new Error(`Vector has an invalid magnitude (${this.x}, ${this.y})`);\n        }\n        return new GeomVector((this.x /= magnitude), (this.y /= magnitude));\n    }\n    scale(factor) {\n        return new GeomVector(this.x * factor, this.y * factor);\n    }\n}\n//# sourceMappingURL=geom-vector.js.map","import { GeomVector } from '../geom/geom-vector.js';\nexport class SpriteState {\n    params;\n    currentFrame;\n    millisecBeforeNextFrame;\n    reverse = false;\n    constructor(params) {\n        this.params = params;\n        this.currentFrame = 0;\n        this.millisecBeforeNextFrame = this.params.delay;\n    }\n    get label() {\n        return this.params.label;\n    }\n    get bbox() {\n        return this.params.frames[this.currentFrame].boundingBox;\n    }\n    get isReversed() {\n        return this.reverse;\n    }\n    update(deltaTime) {\n        const out = {\n            loopedAnimation: false,\n        };\n        if (this.params.frames.length <= 1) {\n            return out;\n        }\n        this.millisecBeforeNextFrame -= deltaTime;\n        if (this.millisecBeforeNextFrame < 0) {\n            this.millisecBeforeNextFrame = this.params.delay;\n            if (this.reverse) {\n                this.currentFrame--;\n                if (this.currentFrame < 0) {\n                    this.currentFrame = this.params.frames.length - 1;\n                    out.loopedAnimation = true;\n                }\n            }\n            else {\n                this.currentFrame++;\n                if (this.currentFrame >= this.params.frames.length) {\n                    this.currentFrame = 0;\n                    out.loopedAnimation = true;\n                }\n            }\n        }\n        return out;\n    }\n    render(drawContext, position) {\n        const frame = this.params.frames[this.currentFrame];\n        const finalPosition = position.moveByVector(new GeomVector(-frame.anchor.x, -frame.anchor.y));\n        this.params.texture.render(drawContext, frame.boundingBox, finalPosition);\n    }\n}\n//# sourceMappingURL=sprite-state.js.map","import { GeomRect } from '../geom/geom-rect.js';\nexport class Sprite {\n    params;\n    currentState;\n    constructor(params) {\n        this.params = params;\n        if (params.states.length < 1) {\n            console.error('Sprite states must have at least 1 state');\n            throw new Error('Sprite states must have at least 1 state');\n        }\n        this.currentState = this.params.states[0];\n    }\n    get boundingBox() {\n        return this.currentState.bbox;\n    }\n    get hitBox() {\n        return this.params.hitBox;\n    }\n    hasHitBox() {\n        return this.params.hitBox !== undefined;\n    }\n    get hitBoxAnchor() {\n        return this.params.hitBoxAnchor;\n    }\n    selectState(label, reverse) {\n        if (label === this.currentState.label) {\n            const reversed = reverse ?? false;\n            if (this.currentState.isReversed === reversed) {\n                return;\n            }\n        }\n        this.currentState = this.params.states[0];\n        const state = this.params.states.find(s => s.label === label);\n        if (state !== undefined) {\n            this.currentState = state;\n        }\n    }\n    update(deltaTime) {\n        return this.currentState.update(deltaTime);\n    }\n    render(drawContext, position) {\n        this.currentState.render(drawContext, position);\n        if (this.hitBox instanceof GeomRect) {\n            drawContext.strokeRect(position.x - (this.hitBoxAnchor?.x ?? 0) + this.hitBox.x, position.y - (this.hitBoxAnchor?.y ?? 0) + this.hitBox.y, this.hitBox.w, this.hitBox.h, {\n                color: 'lightgreen',\n            });\n        }\n    }\n}\n//# sourceMappingURL=sprite.js.map","export class SpriteFrame {\n    params;\n    constructor(params) {\n        this.params = params;\n    }\n    get boundingBox() {\n        return this.params.boundingBox;\n    }\n    get anchor() {\n        return this.params.anchor;\n    }\n}\n//# sourceMappingURL=sprite-frame.js.map","import { GeomPoint } from '../geom/geom-point.js';\nimport { GeomRect } from '../geom/geom-rect.js';\nimport { SpriteState } from './sprite-state.js';\nimport { Sprite } from './sprite.js';\nimport { SpriteFrame } from './sprite-frame.js';\nexport class SpriteManager {\n    spritesData;\n    textureManager;\n    spriteCreator;\n    sprites = new Map();\n    constructor(spritesData, textureManager) {\n        this.spritesData = spritesData;\n        this.textureManager = textureManager;\n        this.spriteCreator = new SpriteCreator(this.textureManager);\n    }\n    getSprite(id) {\n        const spriteData = this.spritesData.find(s => s.id === id);\n        if (spriteData === undefined) {\n            throw new Error(`No sprite data for id '${id}'`);\n        }\n        let sprite = this.sprites.get(id);\n        if (sprite === undefined) {\n            sprite = this.spriteCreator.create(spriteData);\n        }\n        return sprite;\n    }\n}\nclass SpriteCreator {\n    textureManager;\n    constructor(textureManager) {\n        this.textureManager = textureManager;\n    }\n    create(spriteData) {\n        const states = [];\n        for (const stateData of spriteData.states) {\n            states.push(this.createState(stateData));\n        }\n        let hitBox;\n        if (spriteData.hitBox !== undefined) {\n            hitBox = new GeomRect(spriteData.hitBox[0], spriteData.hitBox[1], spriteData.hitBox[2] - spriteData.hitBox[0] + 1, spriteData.hitBox[3] - spriteData.hitBox[1] + 1);\n        }\n        let hitBoxAnchor;\n        if (spriteData.hitBoxAnchor !== undefined) {\n            hitBoxAnchor = new GeomPoint(spriteData.hitBoxAnchor[0], spriteData.hitBoxAnchor[1]);\n        }\n        return new Sprite({\n            states,\n            hitBox,\n            hitBoxAnchor,\n        });\n    }\n    createState(stateData) {\n        const texture = this.textureManager.getTexture(stateData.textureId);\n        const frames = [];\n        if (stateData.frames === undefined) {\n            const defaultFrameData = {\n                bbox: [\n                    texture.imageBBox.x,\n                    texture.imageBBox.y,\n                    texture.imageBBox.x + texture.imageBBox.w - 1,\n                    texture.imageBBox.y + texture.imageBBox.h - 1,\n                ],\n            };\n            frames.push(this.createFrame(defaultFrameData, texture));\n        }\n        else {\n            for (const frameData of stateData.frames) {\n                frames.push(this.createFrame(frameData, texture));\n            }\n        }\n        return new SpriteState({\n            label: stateData.label,\n            texture,\n            delay: stateData.delay ?? 100,\n            frames,\n        });\n    }\n    createFrame(frameData, texture) {\n        let frameBoundingBox;\n        if (frameData.bbox !== undefined) {\n            frameBoundingBox = new GeomRect(frameData.bbox[0], frameData.bbox[1], frameData.bbox[2] - frameData.bbox[0] + 1, frameData.bbox[3] - frameData.bbox[1] + 1);\n        }\n        else {\n            frameBoundingBox = texture.imageBBox;\n        }\n        let frameAnchor;\n        if (frameData.anchor !== undefined) {\n            frameAnchor = new GeomPoint(frameData.anchor[0], frameData.anchor[1]);\n        }\n        else {\n            frameAnchor = new GeomPoint(0, 0);\n        }\n        return new SpriteFrame({\n            boundingBox: frameBoundingBox,\n            anchor: frameAnchor,\n        });\n    }\n}\n//# sourceMappingURL=sprite-manager.js.map","import { EngineGame } from './engine-game.js';\nimport { TextureManager } from './texture/texture-manager.js';\nimport { Scene } from './scene/scene.js';\nimport { SpriteManager } from './sprite/sprite-manager.js';\nconst SCREEN_WIDTH = 500;\nconst SCREEN_HEIGHT = 500;\nexport class EngineApp {\n    canvas;\n    drawContext;\n    lastTimestamp;\n    _game;\n    animationRunning = true;\n    constructor(canvas, drawContext) {\n        this.canvas = canvas;\n        this.drawContext = drawContext;\n    }\n    get game() {\n        return this._game;\n    }\n    get isAnimationRunning() {\n        return this.animationRunning;\n    }\n    async start(tilesData, spritesData, sceneData) {\n        this.canvas.width = SCREEN_WIDTH;\n        this.canvas.height = SCREEN_HEIGHT;\n        const tileManager = new TextureManager();\n        await tileManager.loadTextures(tilesData);\n        const spriteManager = new SpriteManager(spritesData, tileManager);\n        const scene = new Scene(sceneData.layer0.map(item => this.createSceneItem(spriteManager, item)), sceneData.layer1.map(item => this.createSceneItem(spriteManager, item)), sceneData.layer2.map(item => this.createSceneItem(spriteManager, item)), sceneData.layer3.map(item => this.createSceneItem(spriteManager, item)));\n        this._game = new EngineGame(scene);\n        this.setupControls();\n        window.requestAnimationFrame(this.gameLoop.bind(this));\n    }\n    enableAnimation(enabled) {\n        this.animationRunning = enabled;\n        if (this.animationRunning) {\n            window.requestAnimationFrame(this.gameLoop.bind(this));\n        }\n    }\n    goToNextFrame(delatTime) {\n        this.drawBackground();\n        this._game.nextFrame(this.drawContext, delatTime);\n        this._game.updateControlState({\n            action1: false,\n            action2: false,\n        });\n    }\n    gameLoop(timestamp) {\n        this.lastTimestamp = this.lastTimestamp ?? timestamp;\n        const deltaTime = timestamp - this.lastTimestamp;\n        this.lastTimestamp = timestamp;\n        this.goToNextFrame(deltaTime);\n        if (this.animationRunning) {\n            window.requestAnimationFrame(this.gameLoop.bind(this));\n        }\n    }\n    drawBackground() {\n        this.drawContext.fillRect(0, 0, SCREEN_WIDTH, SCREEN_HEIGHT, { color: '#999' });\n        for (let i = 50; i < SCREEN_WIDTH; i += 50) {\n            this.drawContext.strokeRect(i, 0, 50, SCREEN_WIDTH, { color: 'black' });\n        }\n        for (let i = 25; i < SCREEN_WIDTH; i += 25) {\n            this.drawContext.strokeRect(i, 0, 25, SCREEN_WIDTH, { color: '#888' });\n        }\n        for (let j = 50; j < SCREEN_HEIGHT; j += 50) {\n            this.drawContext.strokeRect(0, j, SCREEN_HEIGHT, 50, { color: 'black' });\n        }\n        for (let j = 25; j < SCREEN_HEIGHT; j += 25) {\n            this.drawContext.strokeRect(0, j, SCREEN_HEIGHT, 25, { color: '#888' });\n        }\n    }\n    setupControls() {\n        window.addEventListener('keydown', (event) => {\n            switch (event.code.toLowerCase()) {\n                case 'arrowup':\n                    this.game.updateControlState({ up: true });\n                    event.preventDefault();\n                    break;\n                case 'arrowdown':\n                    this.game.updateControlState({ down: true });\n                    event.preventDefault();\n                    break;\n                case 'arrowleft':\n                    this.game.updateControlState({ left: true });\n                    event.preventDefault();\n                    break;\n                case 'arrowright':\n                    this.game.updateControlState({ right: true });\n                    event.preventDefault();\n                    break;\n                case 'keyz':\n                    this.game.updateControlState({ control: true });\n                    event.preventDefault();\n                    break;\n            }\n        });\n        window.addEventListener('keyup', (event) => {\n            switch (event.code.toLowerCase()) {\n                case 'arrowup':\n                    this.game.updateControlState({ up: false });\n                    event.preventDefault();\n                    break;\n                case 'arrowdown':\n                    this.game.updateControlState({ down: false });\n                    event.preventDefault();\n                    break;\n                case 'arrowleft':\n                    this.game.updateControlState({ left: false });\n                    event.preventDefault();\n                    break;\n                case 'arrowright':\n                    this.game.updateControlState({ right: false });\n                    event.preventDefault();\n                    break;\n                case 'keyz':\n                    this.game.updateControlState({ control: false });\n                    event.preventDefault();\n                    break;\n                case 'keyx':\n                    this.game.updateControlState({ action1: true });\n                    event.preventDefault();\n                    break;\n                case 'keyc':\n                    this.game.updateControlState({ action2: true });\n                    event.preventDefault();\n                    break;\n            }\n        });\n    }\n}\n//# sourceMappingURL=engine-app.js.map","import { GeomPoint } from '../geom/geom-point.js';\nimport { getRandomId } from '../utils/random-id.js';\nexport class GenericItem {\n    _uniqueId;\n    _sprite;\n    _position;\n    constructor(params) {\n        this._uniqueId = getRandomId();\n        this._sprite = params.sprite;\n        this._position = new GeomPoint(params.x, params.y);\n    }\n    canCollide() {\n        return this._sprite.hasHitBox();\n    }\n    get uniqueId() {\n        return this._uniqueId;\n    }\n    get sprite() {\n        return this._sprite;\n    }\n    get position() {\n        return this._position;\n    }\n    get bbox() {\n        return this._sprite.boundingBox;\n    }\n    get hitBox() {\n        return this._sprite.hitBox;\n    }\n    processInputs(controlState, collider) { }\n    update(deltaTime, collider) {\n        const spriteUpdateOut = this._sprite.update(deltaTime);\n        if (spriteUpdateOut.loopedAnimation) {\n            this.spriteAnimationLooped();\n        }\n    }\n    spriteAnimationLooped() { }\n    render(drawContext) {\n        this._sprite.render(drawContext, this._position);\n    }\n}\n//# sourceMappingURL=generic.item.js.map","export function getRandomId() {\n    return btoa(`${Math.random() * 99999}`);\n}\n//# sourceMappingURL=random-id.js.map","import { SpriteChestState } from './sprites.data.js';\nimport { GenericItem } from '../engine/scene/generic.item.js';\nexport class ChestItem extends GenericItem {\n    isOpen = false;\n    constructor(params) {\n        super(params);\n        this._sprite.selectState(SpriteChestState.Closed);\n    }\n    open() {\n        if (this.isOpen) {\n            this._sprite.selectState(SpriteChestState.Opening, true);\n            this.isOpen = false;\n        }\n        else {\n            this._sprite.selectState(SpriteChestState.Opening);\n            this.isOpen = true;\n        }\n    }\n    update(deltaTime, collider) {\n        super.update(deltaTime, collider);\n    }\n    spriteAnimationLooped() {\n        this._sprite.selectState(this.isOpen ? SpriteChestState.Open : SpriteChestState.Closed);\n    }\n}\n//# sourceMappingURL=chest.item.js.map","export var Direction;\n(function (Direction) {\n    Direction[Direction[\"Up\"] = 0] = \"Up\";\n    Direction[Direction[\"Down\"] = 1] = \"Down\";\n    Direction[Direction[\"Left\"] = 2] = \"Left\";\n    Direction[Direction[\"Right\"] = 3] = \"Right\";\n})(Direction || (Direction = {}));\n//# sourceMappingURL=direction.js.map","import { GeomVector } from '../engine/geom/geom-vector.js';\nimport { GenericItem } from '../engine/scene/generic.item.js';\nimport { SpriteHeroState } from './sprites.data.js';\nimport { ChestItem } from './chest.item.js';\nimport { Direction } from '../engine/direction.js';\nconst SPEED_WALKING = 0.1;\nconst SPEED_RUNNING = 0.2;\nvar HeroState;\n(function (HeroState) {\n    HeroState[HeroState[\"Still\"] = 0] = \"Still\";\n    HeroState[HeroState[\"UsingSword\"] = 1] = \"UsingSword\";\n    HeroState[HeroState[\"Walking\"] = 2] = \"Walking\";\n})(HeroState || (HeroState = {}));\nexport class HeroItem extends GenericItem {\n    movingDirectionX;\n    movingDirectionY;\n    primaryDirection;\n    spriteState;\n    previousState;\n    speed = SPEED_WALKING;\n    get state() {\n        switch (this.spriteState) {\n            case SpriteHeroState.StillUp:\n            case SpriteHeroState.StillDown:\n            case SpriteHeroState.StillLeft:\n            case SpriteHeroState.StillRight:\n                return HeroState.Still;\n            case SpriteHeroState.WalkingUp:\n            case SpriteHeroState.WalkingDown:\n            case SpriteHeroState.WalkingLeft:\n            case SpriteHeroState.WalkingRight:\n                return HeroState.Walking;\n            case SpriteHeroState.SwordUp:\n            case SpriteHeroState.SwordDown:\n            case SpriteHeroState.SwordLeft:\n            case SpriteHeroState.SwordRight:\n                return HeroState.UsingSword;\n        }\n    }\n    constructor(params) {\n        super(params);\n        this.spriteState = SpriteHeroState.StillDown;\n        this.previousState = this.spriteState;\n        this.movingDirectionX = 0;\n        this.movingDirectionY = 0;\n    }\n    processInputs(controlState, collider) {\n        super.processInputs(controlState, collider);\n        if (this.state === HeroState.UsingSword) {\n            return;\n        }\n        this.movingDirectionX = 0;\n        if (controlState.left) {\n            this.movingDirectionX = -1;\n            this.spriteState = SpriteHeroState.WalkingLeft;\n            if (this.primaryDirection !== Direction.Up && this.primaryDirection !== Direction.Down) {\n                this.primaryDirection = Direction.Left;\n            }\n        }\n        else if (controlState.right) {\n            this.movingDirectionX = 1;\n            this.spriteState = SpriteHeroState.WalkingRight;\n            if (this.primaryDirection !== Direction.Up && this.primaryDirection !== Direction.Down) {\n                this.primaryDirection = Direction.Right;\n            }\n        }\n        this.movingDirectionY = 0;\n        if (controlState.up) {\n            this.movingDirectionY = -1;\n            this.spriteState = SpriteHeroState.WalkingUp;\n            if (this.primaryDirection !== Direction.Left && this.primaryDirection !== Direction.Right) {\n                this.primaryDirection = Direction.Up;\n            }\n        }\n        else if (controlState.down) {\n            this.movingDirectionY = 1;\n            this.spriteState = SpriteHeroState.WalkingDown;\n            if (this.primaryDirection !== Direction.Left && this.primaryDirection !== Direction.Right) {\n                this.primaryDirection = Direction.Down;\n            }\n        }\n        if (this.state === HeroState.Still) {\n            switch (this.primaryDirection) {\n                case Direction.Up:\n                    this.spriteState = SpriteHeroState.StillUp;\n                    break;\n                case Direction.Down:\n                    this.spriteState = SpriteHeroState.StillDown;\n                    break;\n                case Direction.Left:\n                    this.spriteState = SpriteHeroState.StillLeft;\n                    break;\n                case Direction.Right:\n                    this.spriteState = SpriteHeroState.StillRight;\n                    break;\n            }\n            this.primaryDirection = undefined;\n        }\n        if (controlState.action2) {\n            this.previousState = this.spriteState;\n            switch (this.primaryDirection) {\n                case Direction.Up:\n                    this.spriteState = SpriteHeroState.SwordUp;\n                    break;\n                case Direction.Down:\n                    this.spriteState = SpriteHeroState.SwordDown;\n                    break;\n                case Direction.Left:\n                    this.spriteState = SpriteHeroState.SwordLeft;\n                    break;\n                case Direction.Right:\n                    this.spriteState = SpriteHeroState.SwordRight;\n                    break;\n            }\n        }\n        this._sprite.selectState(this.spriteState);\n        this.speed = controlState.control ? SPEED_RUNNING : SPEED_WALKING;\n        if (controlState.action1) {\n            const collideItem = collider.anyItemCollidesWith(this, this._position, { tolerance: 5 });\n            if (collideItem !== undefined && collideItem instanceof ChestItem) {\n                const chest = collideItem;\n                chest.open();\n            }\n        }\n    }\n    update(deltaTime, collider) {\n        super.update(deltaTime, collider);\n        switch (this.spriteState) {\n            case SpriteHeroState.WalkingUp:\n            case SpriteHeroState.WalkingDown:\n            case SpriteHeroState.WalkingLeft:\n            case SpriteHeroState.WalkingRight:\n                this.handleWalk(deltaTime, new GeomVector(this.movingDirectionX, 0), collider);\n                this.handleWalk(deltaTime, new GeomVector(0, this.movingDirectionY), collider);\n                break;\n        }\n    }\n    spriteAnimationLooped() {\n        if (this.state === HeroState.UsingSword) {\n            this._sprite.selectState(this.previousState);\n            this.spriteState = this.previousState;\n        }\n    }\n    render(drawContext) {\n        super.render(drawContext);\n    }\n    handleWalk(deltaTime, direction, collider) {\n        const moveDirection = direction.scale(this.speed * deltaTime);\n        const nextPosition = this._position.moveByVector(moveDirection);\n        if (collider.anyItemCollidesWith(this, nextPosition)) {\n            return;\n        }\n        this._position = this._position.moveByVector(moveDirection);\n    }\n}\n//# sourceMappingURL=hero.item.js.map","import { App } from './game/app.js';\nimport { CanvasDrawContext } from './canvas-draw-context.js';\nimport { UI } from './ui.js';\nimport { texturesData } from './game/textures.data.js';\nimport { spritesData } from './game/sprites.data.js';\nimport { sceneData } from './game/scene.data.js';\nconst canvasDiv = document.getElementById('canvas') ?? undefined;\nif (canvasDiv === undefined) {\n    console.error('no canvas div');\n    throw new Error('no canvas div');\n}\nconst context = canvasDiv.getContext('2d') ?? undefined;\nif (context === undefined) {\n    console.error('no context in canvas');\n    throw new Error('no context in canvas');\n}\nconst drawContext = new CanvasDrawContext(context);\nconst app = new App(canvasDiv, drawContext);\nconst ui = new UI(app);\nui.stopButton.addEventListener('click', (event) => {\n    app.enableAnimation(false);\n    ui.update();\n});\nui.startButton.addEventListener('click', (event) => {\n    app.enableAnimation(true);\n    ui.update();\n});\nui.stepButton.addEventListener('click', (event) => {\n    app.goToNextFrame(13);\n    ui.update();\n});\nawait app.start(texturesData, spritesData, sceneData);\n//# sourceMappingURL=index.js.map","export class CanvasDrawContext {\n    context;\n    constructor(context) {\n        this.context = context;\n    }\n    strokeRect(x, y, w, h, options) {\n        this.context.save();\n        if (options?.width !== undefined) {\n            this.context.lineWidth = options.width;\n        }\n        if (options?.color !== undefined) {\n            this.context.strokeStyle = options.color;\n        }\n        this.context.strokeRect(x, y, w, h);\n        this.context.restore();\n    }\n    fillRect(x, y, w, h, options) {\n        this.context.save();\n        if (options?.color !== undefined) {\n            this.context.fillStyle = options.color;\n        }\n        this.context.fillRect(x, y, w, h);\n        this.context.restore();\n    }\n    drawImage(image, x, y, w, h) {\n        this.context.save();\n        this.context.drawImage(image, x, y, w, h);\n        this.context.restore();\n    }\n    drawImageCropped(image, x, y, w, h, sx, sy, sw, sh) {\n        this.context.save();\n        this.context.drawImage(image, x, y, w, h, sx, sy, sw, sh);\n        this.context.restore();\n    }\n    writeText(text, x, y, options) {\n        this.context.save();\n        if (options?.horizontalAlign !== undefined) {\n            switch (options.horizontalAlign) {\n                case 'left':\n                    this.context.textAlign = 'left';\n                    break;\n                case 'center':\n                    this.context.textAlign = 'center';\n                    break;\n                case 'right':\n                    this.context.textAlign = 'right';\n                    break;\n            }\n        }\n        if (options?.verticalAlign !== undefined) {\n            switch (options.verticalAlign) {\n                case 'top':\n                    this.context.textBaseline = 'top';\n                    break;\n                case 'center':\n                    this.context.textBaseline = 'middle';\n                    break;\n                case 'bottom':\n                    this.context.textBaseline = 'bottom';\n                    break;\n            }\n        }\n        this.context.fillText(text, x, y);\n        this.context.restore();\n    }\n}\n//# sourceMappingURL=canvas-draw-context.js.map","import { SceneDataItemType } from './scene.data.js';\nimport { EngineApp } from '../engine/engine-app.js';\nimport { GenericItem } from '../engine/scene/generic.item.js';\nimport { ChestItem } from './chest.item.js';\nimport { HeroItem } from './hero.item.js';\nexport class App extends EngineApp {\n    createSceneItem(spriteManager, dataItem) {\n        const sprite = spriteManager.getSprite(dataItem.spriteId);\n        if (dataItem.type !== undefined) {\n            switch (dataItem.type) {\n                case SceneDataItemType.Chest:\n                    return new ChestItem({ sprite, x: dataItem.x, y: dataItem.y });\n                case SceneDataItemType.Hero:\n                    return new HeroItem({ sprite, x: dataItem.x, y: dataItem.y });\n                default:\n                    console.error(`Unhandled item type '${dataItem.type}' at (x,y) = (${dataItem.x},${dataItem.y})`);\n                    throw new Error();\n            }\n        }\n        return new GenericItem({ sprite, x: dataItem.x, y: dataItem.y });\n    }\n}\n//# sourceMappingURL=app.js.map","export class UI {\n    app;\n    stopButton = document.getElementById('ui-btn-stop');\n    startButton = document.getElementById('ui-btn-start');\n    stepButton = document.getElementById('ui-btn-step');\n    constructor(app) {\n        this.app = app;\n        this.update();\n    }\n    update() {\n        this.stopButton.style.display = this.app.isAnimationRunning ? 'unset' : 'none';\n        this.startButton.style.display = this.app.isAnimationRunning ? 'none' : 'unset';\n    }\n}\n//# sourceMappingURL=ui.js.map"],"names":["TextureId","assetsDir","texturesData","id","Character","url","Objects","Overworld","SpriteId","SpriteChestState","SpriteHeroState","spritesData","Grass0","states","textureId","frames","bbox","Grass1","Plant","anchor","hitBox","PlantOverlay","Hero","label","StillUp","StillDown","StillLeft","StillRight","WalkingUp","WalkingDown","WalkingLeft","WalkingRight","SceneDataItemType","sceneData","layer0","spriteId","x","y","layer1","layer2","type","layer3","FrameRateIterator","targetFps","timer","frameCountInOneSecond","fps","constructor","params","this","shouldRender","deltaTime","Promise","resolve","EngineGame","scene","controlState","frameRateIterator","up","down","left","right","control","action1","action2","nextFrame","drawContext","processInputs","update","then","render","updateControlState","state","fpsString","writeText","horizontalAlign","verticalAlign","error","console","Intersections","rectIntersectsWithCircle","rect","circle","rectIntersectsWithRect","r1","r2","w","h","circleIntersectsWithCircle","c1","c2","diffX","diffY","Math","sqrt","r","circleIntersectsWithRect","GeomRect","equals","other","moveByVector","vector","intersectsWithRect","intersectsWithCircle","Texture","image","imageBBox","width","height","getCroppedImage","canvas","document","createElement","getContext","drawImage","croppedImage","src","toDataURL","position","drawImageCropped","TextureManager","textures","Map","loadTextures","textureData","texture","reject","Image","onload","onerror","set","getTexture","get","undefined","Error","scaleImage","img","scale","Number","isInteger","originalContext","originalWidth","originalHeight","targetWidth","targetHeight","originalData","getImageData","targetCanvas","targetContext","targetData","createImageData","targetDataIndex","lineStartIndex","lineEndIndex","linePixelsRGBA","data","slice","s","length","putImageData","targetImg","SceneCollider","items","anyItemCollidesWith","checkedItem","options","sceneItem","canCollide","uniqueId","checkCollision","sprite","tolerance","sprite1","position1","sprite2","position2","hitBox1","hitBoxAnchor","hitBox2","Scene","collider","forEach","item","sort","a","b","GeomPoint","GeomVector","normalize","magnitude","factor","SpriteState","currentFrame","millisecBeforeNextFrame","reverse","delay","boundingBox","isReversed","out","loopedAnimation","frame","finalPosition","Sprite","currentState","hasHitBox","selectState","reversed","find","strokeRect","color","SpriteFrame","SpriteManager","textureManager","spriteCreator","sprites","SpriteCreator","getSprite","spriteData","create","stateData","push","createState","defaultFrameData","createFrame","frameData","frameBoundingBox","frameAnchor","SCREEN_WIDTH","SCREEN_HEIGHT","EngineApp","lastTimestamp","_game","animationRunning","game","isAnimationRunning","start","tilesData","tileManager","spriteManager","map","createSceneItem","setupControls","window","requestAnimationFrame","gameLoop","bind","enableAnimation","enabled","goToNextFrame","delatTime","drawBackground","timestamp","fillRect","i","j","addEventListener","event","code","toLowerCase","preventDefault","GenericItem","_uniqueId","_sprite","_position","btoa","random","spriteAnimationLooped","ChestItem","isOpen","super","Closed","open","Opening","Open","Direction","HeroState","HeroItem","movingDirectionX","movingDirectionY","primaryDirection","spriteState","previousState","speed","Still","Walking","SwordUp","SwordDown","SwordLeft","SwordRight","UsingSword","Up","Down","Left","Right","collideItem","handleWalk","direction","moveDirection","nextPosition","canvasDiv","getElementById","context","save","lineWidth","strokeStyle","restore","fillStyle","sx","sy","sw","sh","text","textAlign","textBaseline","fillText","app","dataItem","Chest","ui","stopButton","startButton","stepButton","style","display"],"mappings":"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"}